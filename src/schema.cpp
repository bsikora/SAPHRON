#include "schema.h"

namespace SAPHRON
{
	//INSERT_DEF_HERE
	std::string SAPHRON::JsonSchema::Simulation = "{\"type\": \"object\", \"required\": [\"simtype\", \"sweeps\"], \"properties\": {\"mps\": {\"minimum\": 1, \"type\": \"integer\"}, \"units\": {\"type\": \"string\", \"enum\": [\"real\", \"reduced\"]}, \"sweeps\": {\"minimum\": 1, \"type\": \"integer\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"simtype\": {\"type\": \"string\", \"enum\": [\"standard\", \"DOS\"]}}}";
	std::string SAPHRON::JsonSchema::ForceFields = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"bonded\": {\"type\": \"array\"}, \"electrostatic\": {\"type\": \"array\"}, \"nonbonded\": {\"type\": \"array\"}}}";
	std::string SAPHRON::JsonSchema::LebwholLasher = "{\"required\": [\"type\", \"epsilon\", \"gamma\", \"species\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"LebwohlLasher\"]}, \"gamma\": {\"type\": \"number\"}, \"species\": {\"additionalItems\": false, \"type\": \"array\", \"maxItems\": 2, \"minItems\": 2, \"items\": {\"type\": \"string\"}}, \"epsilon\": {\"type\": \"number\"}}}";
	std::string SAPHRON::JsonSchema::LennardJones = "{\"required\": [\"type\", \"sigma\", \"epsilon\", \"species\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"LennardJones\"]}, \"species\": {\"additionalItems\": false, \"type\": \"array\", \"maxItems\": 2, \"minItems\": 2, \"items\": {\"type\": \"string\"}}, \"epsilon\": {\"minimum\": 0, \"type\": \"number\"}, \"sigma\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}}}";
	std::string SAPHRON::JsonSchema::Worlds = "{\"type\": \"array\", \"items\": {\"type\": \"object\", \"required\": [\"type\", \"dimensions\", \"r_cutoff\", \"components\"], \"properties\": {\"nlist_cutoff\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"r_cutoff\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"particles\": {\"type\": \"array\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"components\": {\"type\": \"object\"}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"temperature\": {\"minimum\": 0, \"type\": \"number\"}, \"dimensions\": {\"additionalItems\": false, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"items\": {\"minimum\": 0, \"type\": \"number\"}}}}, \"minItems\": 1}";
	std::string SAPHRON::JsonSchema::SimpleWorld = "{\"type\": \"object\", \"required\": [\"type\", \"dimensions\", \"r_cutoff\", \"components\"], \"properties\": {\"nlist_cutoff\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"r_cutoff\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"particles\": {\"type\": \"array\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"components\": {\"type\": \"object\"}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"temperature\": {\"minimum\": 0, \"type\": \"number\"}, \"dimensions\": {\"additionalItems\": false, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"items\": {\"minimum\": 0, \"type\": \"number\"}}}}";
	std::string SAPHRON::JsonSchema::Particles = "{\"additionalItems\": false, \"type\": \"array\", \"items\": {\"additionalItems\": false, \"type\": \"array\", \"items\": [{\"minimum\": 1, \"type\": \"integer\"}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"additionalItems\": false, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"items\": {\"minimum\": 0, \"type\": \"number\"}}, {\"additionalItems\": false, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"items\": {\"type\": \"number\"}}, {\"type\": \"string\"}], \"minItems\": 4}, \"minItems\": 1}";
	std::string SAPHRON::JsonSchema::Site = "{\"additionalItems\": false, \"type\": \"array\", \"items\": [{\"minimum\": 1, \"type\": \"integer\"}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"additionalItems\": false, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"items\": {\"minimum\": 0, \"type\": \"number\"}}, {\"additionalItems\": false, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"items\": {\"type\": \"number\"}}, {\"type\": \"string\"}], \"minItems\": 4}";
	std::string SAPHRON::JsonSchema::Components = "{\"minProperties\": 1, \"type\": \"object\", \"additionalProperties\": false, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"minProperties\": 1, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"count\"], \"properties\": {\"children\": {\"type\": \"array\", \"items\": {\"type\": \"object\", \"required\": [\"species\"], \"properties\": {\"mass\": {\"minimum\": 0, \"type\": \"number\"}, \"species\": {\"type\": \"string\"}, \"charge\": {\"type\": \"number\"}}}, \"minItems\": 1}, \"count\": {\"minimum\": 1, \"type\": \"integer\"}, \"mass\": {\"minimum\": 0, \"type\": \"number\"}, \"charge\": {\"type\": \"number\"}}}}}";
	std::string SAPHRON::JsonSchema::Selector = "{}";
	std::string SAPHRON::JsonSchema::Director = "{\"additionalItems\": false, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"items\": {\"type\": \"number\"}}";
	std::string SAPHRON::JsonSchema::Observer = "{\"type\": \"object\", \"oneOf\": [{\"required\": [\"file_prefix\"], \"properties\": {\"file_prefix\": {\"type\": \"string\"}}}], \"properties\": {\"frequency\": {\"minimum\": 1, \"type\": \"integer\"}, \"flags\": {\"type\": \"object\", \"properties\": {\"energy\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"sweeps\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_composition\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"acceptance\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"identifier\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_count\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_density\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"temperature\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_volume\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}}}}}";
	std::string SAPHRON::JsonSchema::CSVObserver = "{\"required\": [\"file_prefix\"], \"properties\": {\"file_prefix\": {\"type\": \"string\"}}}";
	std::string SAPHRON::JsonSchema::VolumeSwapMove = "{\"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"dv\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"VolumeSwap\"]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"dv\": {\"minimum\": 0, \"type\": \"number\"}}}";
	std::string SAPHRON::JsonSchema::RotateMove = "{\"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"maxangle\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"Rotate\"]}, \"maxangle\": {\"minimum\": 0, \"type\": \"number\", \"maximum\": 6.283185307179586, \"exclusiveMinimum\": true}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}}";
	std::string SAPHRON::JsonSchema::TranslateMove = "{\"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"dx\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"Translate\"]}, \"dx\": {\"minimum\": 0, \"type\": \"number\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}}";
	std::string SAPHRON::JsonSchema::DirectorRotateMove = "{\"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"DirectorRotate\"]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}}";
	std::string SAPHRON::JsonSchema::SpeciesSwapMove = "{\"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"SpeciesSwap\"]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}}";
	std::string SAPHRON::JsonSchema::ParticleSwapMove = "{\"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"ParticleSwap\"]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}}";
	std::string SAPHRON::JsonSchema::Moves = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::RandomIdentityMove = "{\"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"identities\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"RandomIdentity\"]}, \"identities\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"uniqueItems\": true, \"minIems\": 1}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}}";
	std::string SAPHRON::JsonSchema::FlipSpinMove = "{\"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"FlipSpin\"]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}}";
	std::string SAPHRON::JsonSchema::P2SAConnectivity = "{\"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"selector\": {}, \"coefficient\": {\"type\": \"number\"}, \"director\": {\"additionalItems\": false, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"items\": {\"type\": \"number\"}}}}";
	std::string SAPHRON::JsonSchema::Connectivities = "{\"type\": \"array\", \"items\": {\"oneOf\": [{\"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"selector\": {}, \"coefficient\": {\"type\": \"number\"}, \"director\": {\"additionalItems\": false, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"items\": {\"type\": \"number\"}}}}]}}";
	
}
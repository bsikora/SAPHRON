#include "schema.h"

namespace SAPHRON
{
	//INSERT_DEF_HERE
	std::string SAPHRON::JsonSchema::ForceFields = "{\"additionalProperties\": false, \"properties\": {\"nonbonded\": {\"type\": \"array\"}, \"electrostatic\": {\"type\": \"array\"}, \"bonded\": {\"type\": \"array\"}}, \"type\": \"object\"}";
	std::string SAPHRON::JsonSchema::LebwholLasher = "{\"additionalProperties\": false, \"properties\": {\"species\": {\"minItems\": 2, \"additionalItems\": false, \"items\": {\"type\": \"string\"}, \"maxItems\": 2, \"type\": \"array\"}, \"epsilon\": {\"type\": \"number\"}, \"gamma\": {\"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"LebwohlLasher\"]}}, \"type\": \"object\", \"required\": [\"type\", \"epsilon\", \"gamma\", \"species\"]}";
	std::string SAPHRON::JsonSchema::LennardJones = "{\"additionalProperties\": false, \"properties\": {\"sigma\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"species\": {\"minItems\": 2, \"additionalItems\": false, \"items\": {\"type\": \"string\"}, \"maxItems\": 2, \"type\": \"array\"}, \"epsilon\": {\"minimum\": 0, \"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"LennardJones\"]}}, \"type\": \"object\", \"required\": [\"type\", \"sigma\", \"epsilon\", \"species\"]}";
	std::string SAPHRON::JsonSchema::Worlds = "{\"minItems\": 1, \"items\": {\"required\": [\"type\", \"dimensions\", \"r_cutoff\", \"components\"], \"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"components\": {\"type\": \"object\"}, \"r_cutoff\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"dimensions\": {\"minItems\": 3, \"additionalItems\": false, \"items\": {\"minimum\": 0, \"type\": \"number\"}, \"maxItems\": 3, \"type\": \"array\"}, \"particles\": {\"type\": \"array\"}, \"nlist_cutoff\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}}, \"type\": \"object\"}, \"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::SimpleWorld = "{\"required\": [\"type\", \"dimensions\", \"r_cutoff\", \"components\"], \"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"components\": {\"type\": \"object\"}, \"r_cutoff\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"dimensions\": {\"minItems\": 3, \"additionalItems\": false, \"items\": {\"minimum\": 0, \"type\": \"number\"}, \"maxItems\": 3, \"type\": \"array\"}, \"particles\": {\"type\": \"array\"}, \"nlist_cutoff\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}}, \"type\": \"object\"}";
	std::string SAPHRON::JsonSchema::Particles = "{\"additionalItems\": false, \"minItems\": 1, \"items\": {\"additionalItems\": false, \"minItems\": 4, \"items\": [{\"minimum\": 1, \"type\": \"integer\"}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"minItems\": 3, \"additionalItems\": false, \"items\": {\"minimum\": 0, \"type\": \"number\"}, \"maxItems\": 3, \"type\": \"array\"}, {\"minItems\": 3, \"additionalItems\": false, \"items\": {\"type\": \"number\"}, \"maxItems\": 3, \"type\": \"array\"}, {\"type\": \"string\"}], \"type\": \"array\"}, \"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::Site = "{\"additionalItems\": false, \"minItems\": 4, \"items\": [{\"minimum\": 1, \"type\": \"integer\"}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"minItems\": 3, \"additionalItems\": false, \"items\": {\"minimum\": 0, \"type\": \"number\"}, \"maxItems\": 3, \"type\": \"array\"}, {\"minItems\": 3, \"additionalItems\": false, \"items\": {\"type\": \"number\"}, \"maxItems\": 3, \"type\": \"array\"}, {\"type\": \"string\"}], \"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::Components = "{\"additionalProperties\": false, \"minProperties\": 1, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"required\": [\"count\"], \"properties\": {\"count\": {\"minimum\": 1, \"type\": \"integer\"}, \"charge\": {\"type\": \"number\"}, \"mass\": {\"minimum\": 0, \"type\": \"number\"}, \"children\": {\"minItems\": 1, \"items\": {\"required\": [\"species\"], \"properties\": {\"species\": {\"type\": \"string\"}, \"charge\": {\"type\": \"number\"}, \"mass\": {\"minimum\": 0, \"type\": \"number\"}}, \"type\": \"object\"}, \"type\": \"array\"}}, \"minProperties\": 1, \"type\": \"object\", \"additionalProperties\": false}}, \"type\": \"object\"}";
	std::string SAPHRON::JsonSchema::Selector = "{}";
	std::string SAPHRON::JsonSchema::Director = "{\"minItems\": 3, \"additionalItems\": false, \"items\": {\"type\": \"number\"}, \"maxItems\": 3, \"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::Observer = "{\"properties\": {\"frequency\": {\"minimum\": 1, \"type\": \"integer\"}, \"flags\": {\"properties\": {\"pressure\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"world_count\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"world_volume\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"world_composition\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"world_density\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"identifier\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"acceptance\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"sweeps\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"energy\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"temperature\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}}, \"type\": \"object\"}}, \"oneOf\": [{\"required\": [\"file_prefix\"], \"properties\": {\"file_prefix\": {\"type\": \"string\"}}}], \"type\": \"object\"}";
	std::string SAPHRON::JsonSchema::CSVObserver = "{\"required\": [\"file_prefix\"], \"properties\": {\"file_prefix\": {\"type\": \"string\"}}}";
	std::string SAPHRON::JsonSchema::TranslateMove = "{\"required\": [\"type\", \"dx\"], \"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"dx\": {\"minimum\": 0, \"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"Translate\"]}}, \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::DirectorRotateMove = "{\"required\": [\"type\"], \"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"DirectorRotate\"]}}, \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::SpeciesSwapMove = "{\"required\": [\"type\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"SpeciesSwap\"]}}, \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::ParticleSwapMove = "{\"required\": [\"type\"], \"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"ParticleSwap\"]}}, \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Moves = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::RandomIdentityMove = "{\"required\": [\"type\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"IdentityChange\"]}}, \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::FlipSpinMove = "{\"required\": [\"type\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"FlipSpin\"]}}, \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::GibbsNVTEnsemble = "{\"required\": [\"type\", \"temperature\"], \"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"temperature\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": \"true\"}, \"type\": {\"type\": \"string\", \"enum\": [\"GibbsNVT\"]}, \"sweeps\": {\"minimum\": 1, \"type\": \"integer\"}}, \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::NVTEnsemble = "{\"required\": [\"type\", \"temperature\"], \"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"temperature\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": \"true\"}, \"type\": {\"type\": \"string\", \"enum\": [\"NVT\"]}, \"sweeps\": {\"minimum\": 1, \"type\": \"integer\"}}, \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Ensembles = "{\"oneOf\": [{\"required\": [\"type\", \"temperature\"], \"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"temperature\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": \"true\"}, \"type\": {\"type\": \"string\", \"enum\": [\"NVT\"]}, \"sweeps\": {\"minimum\": 1, \"type\": \"integer\"}}, \"type\": \"object\", \"additionalProperties\": false}, {\"required\": [\"type\", \"temperature\"], \"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"temperature\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": \"true\"}, \"type\": {\"type\": \"string\", \"enum\": [\"GibbsNVT\"]}, \"sweeps\": {\"minimum\": 1, \"type\": \"integer\"}}, \"type\": \"object\", \"additionalProperties\": false}]}";
	std::string SAPHRON::JsonSchema::P2SAConnectivity = "{\"required\": [\"type\", \"coefficient\", \"director\", \"selector\"], \"properties\": {\"selector\": {}, \"coefficient\": {\"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"director\": {\"minItems\": 3, \"additionalItems\": false, \"items\": {\"type\": \"number\"}, \"maxItems\": 3, \"type\": \"array\"}}, \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Connectivities = "{\"items\": {\"oneOf\": [{\"required\": [\"type\", \"coefficient\", \"director\", \"selector\"], \"properties\": {\"selector\": {}, \"coefficient\": {\"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"director\": {\"minItems\": 3, \"additionalItems\": false, \"items\": {\"type\": \"number\"}, \"maxItems\": 3, \"type\": \"array\"}}, \"type\": \"object\", \"additionalProperties\": false}]}, \"type\": \"array\"}";
	
}
#include "schema.h"

namespace SAPHRON
{
	//INSERT_DEF_HERE
	std::string SAPHRON::JsonSchema::ForceFields = "{\"properties\": {\"nonbonded\": {\"type\": \"array\"}, \"bonded\": {\"type\": \"array\"}, \"electrostatic\": {\"type\": \"array\"}}, \"additionalProperties\": false, \"type\": \"object\"}";
	std::string SAPHRON::JsonSchema::LebwholLasher = "{\"properties\": {\"epsilon\": {\"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"LebwohlLasher\"]}, \"gamma\": {\"type\": \"number\"}, \"species\": {\"items\": {\"type\": \"string\"}, \"additionalItems\": false, \"type\": \"array\", \"minItems\": 2, \"maxItems\": 2}}, \"additionalProperties\": false, \"type\": \"object\", \"required\": [\"type\", \"epsilon\", \"gamma\", \"species\"]}";
	std::string SAPHRON::JsonSchema::LennardJones = "{\"properties\": {\"rcut\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"epsilon\": {\"type\": \"number\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"LennardJones\"]}, \"sigma\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"species\": {\"items\": {\"type\": \"string\"}, \"additionalItems\": false, \"type\": \"array\", \"minItems\": 2, \"maxItems\": 2}}, \"additionalProperties\": false, \"type\": \"object\", \"required\": [\"type\", \"sigma\", \"epsilon\", \"rcut\", \"species\"]}";
	std::string SAPHRON::JsonSchema::Worlds = "{\"items\": {\"properties\": {\"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"skin_thickness\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"dimensions\": {\"items\": {\"type\": \"number\", \"minimum\": 0}, \"additionalItems\": false, \"type\": \"array\", \"minItems\": 3, \"maxItems\": 3}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"nlist_cutoff\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}}, \"required\": [\"type\", \"dimensions\", \"nlist_cutoff\", \"skin_thickness\"], \"type\": \"object\"}, \"type\": \"array\", \"minItems\": 1}";
	std::string SAPHRON::JsonSchema::SimpleWorld = "{\"properties\": {\"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"skin_thickness\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"dimensions\": {\"items\": {\"type\": \"number\", \"minimum\": 0}, \"additionalItems\": false, \"type\": \"array\", \"minItems\": 3, \"maxItems\": 3}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"nlist_cutoff\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}}, \"required\": [\"type\", \"dimensions\", \"nlist_cutoff\", \"skin_thickness\"], \"type\": \"object\"}";
	std::string SAPHRON::JsonSchema::Particles = "{\"items\": {\"items\": [{\"type\": \"integer\", \"minimum\": 1}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"items\": {\"type\": \"number\", \"minimum\": 0}, \"additionalItems\": false, \"type\": \"array\", \"minItems\": 3, \"maxItems\": 3}, {\"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"type\": \"array\", \"minItems\": 3, \"maxItems\": 3}, {\"type\": \"string\"}], \"additionalItems\": false, \"type\": \"array\", \"minItems\": 4}, \"additionalItems\": false, \"type\": \"array\", \"minItems\": 1}";
	std::string SAPHRON::JsonSchema::Site = "{\"items\": [{\"type\": \"integer\", \"minimum\": 1}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"items\": {\"type\": \"number\", \"minimum\": 0}, \"additionalItems\": false, \"type\": \"array\", \"minItems\": 3, \"maxItems\": 3}, {\"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"type\": \"array\", \"minItems\": 3, \"maxItems\": 3}, {\"type\": \"string\"}], \"additionalItems\": false, \"type\": \"array\", \"minItems\": 4}";
	std::string SAPHRON::JsonSchema::Components = "{\"additionalProperties\": false, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"additionalProperties\": false, \"properties\": {\"count\": {\"type\": \"integer\", \"minimum\": 1}, \"children\": {\"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"object\"}}, \"type\": \"object\"}}, \"required\": [\"count\"], \"type\": \"object\", \"minProperties\": 1}}, \"type\": \"object\", \"minProperties\": 1}";
	std::string SAPHRON::JsonSchema::Selector = "{}";
	std::string SAPHRON::JsonSchema::Director = "{\"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"type\": \"array\", \"minItems\": 3, \"maxItems\": 3}";
	std::string SAPHRON::JsonSchema::Observer = "{\"properties\": {\"flags\": {\"properties\": {\"world_density\": {\"maximum\": 1, \"type\": \"integer\", \"minimum\": 0}, \"sweeps\": {\"maximum\": 1, \"type\": \"integer\", \"minimum\": 0}, \"world_composition\": {\"maximum\": 1, \"type\": \"integer\", \"minimum\": 0}, \"world_count\": {\"maximum\": 1, \"type\": \"integer\", \"minimum\": 0}, \"energy\": {\"maximum\": 1, \"type\": \"integer\", \"minimum\": 0}, \"world_volume\": {\"maximum\": 1, \"type\": \"integer\", \"minimum\": 0}, \"acceptance\": {\"maximum\": 1, \"type\": \"integer\", \"minimum\": 0}, \"temperature\": {\"maximum\": 1, \"type\": \"integer\", \"minimum\": 0}, \"identifier\": {\"maximum\": 1, \"type\": \"integer\", \"minimum\": 0}, \"pressure\": {\"maximum\": 1, \"type\": \"integer\", \"minimum\": 0}}, \"type\": \"object\"}, \"frequency\": {\"type\": \"integer\", \"minimum\": 1}}, \"type\": \"object\", \"oneOf\": [{\"properties\": {\"file_prefix\": {\"type\": \"string\"}}, \"required\": [\"file_prefix\"]}]}";
	std::string SAPHRON::JsonSchema::CSVObserver = "{\"properties\": {\"file_prefix\": {\"type\": \"string\"}}, \"required\": [\"file_prefix\"]}";
	std::string SAPHRON::JsonSchema::TranslateMove = "{\"properties\": {\"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"Translate\"]}, \"dx\": {\"type\": \"number\", \"minimum\": 0}}, \"required\": [\"type\", \"dx\"], \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::SphereUnitVectorMove = "{\"properties\": {\"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"SphereUnitVector\"]}}, \"required\": [\"type\"], \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::SpeciesSwapMove = "{\"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"SpeciesSwap\"]}}, \"required\": [\"type\"], \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::ParticleSwapMove = "{\"properties\": {\"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"ParticleSwap\"]}}, \"required\": [\"type\"], \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Moves = "{\"items\": {\"oneOf\": [{\"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"FlipSpin\"]}}, \"required\": [\"type\"], \"type\": \"object\", \"additionalProperties\": false}, {\"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"IdentityChange\"]}}, \"required\": [\"type\"], \"type\": \"object\", \"additionalProperties\": false}, {\"properties\": {\"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"ParticleSwap\"]}}, \"required\": [\"type\"], \"type\": \"object\", \"additionalProperties\": false}, {\"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"SpeciesSwap\"]}}, \"required\": [\"type\"], \"type\": \"object\", \"additionalProperties\": false}, {\"properties\": {\"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"SphereUnitVector\"]}}, \"required\": [\"type\"], \"type\": \"object\", \"additionalProperties\": false}, {\"properties\": {\"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"Translate\"]}, \"dx\": {\"type\": \"number\", \"minimum\": 0}}, \"required\": [\"type\", \"dx\"], \"type\": \"object\", \"additionalProperties\": false}, {\"properties\": {\"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"dv\": {\"type\": \"number\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"VolumeScale\"]}}, \"required\": [\"type\", \"dv\"], \"type\": \"object\", \"additionalProperties\": false}]}, \"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::IdentityChangeMove = "{\"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"IdentityChange\"]}}, \"required\": [\"type\"], \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::FlipSpinMove = "{\"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"FlipSpin\"]}}, \"required\": [\"type\"], \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::GibbsNVTEnsemble = "{\"properties\": {\"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"sweeps\": {\"type\": \"integer\", \"minimum\": 1}, \"temperature\": {\"exclusiveMinimum\": \"true\", \"type\": \"number\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"GibbsNVT\"]}}, \"required\": [\"type\", \"temperature\"], \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::NVTEnsemble = "{\"properties\": {\"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"sweeps\": {\"type\": \"integer\", \"minimum\": 1}, \"temperature\": {\"exclusiveMinimum\": \"true\", \"type\": \"number\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"NVT\"]}}, \"required\": [\"type\", \"temperature\"], \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Ensembles = "{\"oneOf\": [{\"properties\": {\"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"sweeps\": {\"type\": \"integer\", \"minimum\": 1}, \"temperature\": {\"exclusiveMinimum\": \"true\", \"type\": \"number\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"NVT\"]}}, \"required\": [\"type\", \"temperature\"], \"type\": \"object\", \"additionalProperties\": false}, {\"properties\": {\"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"sweeps\": {\"type\": \"integer\", \"minimum\": 1}, \"temperature\": {\"exclusiveMinimum\": \"true\", \"type\": \"number\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"GibbsNVT\"]}}, \"required\": [\"type\", \"temperature\"], \"type\": \"object\", \"additionalProperties\": false}]}";
	std::string SAPHRON::JsonSchema::P2SAConnectivity = "{\"properties\": {\"selector\": {}, \"coefficient\": {\"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"director\": {\"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"type\": \"array\", \"minItems\": 3, \"maxItems\": 3}}, \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"], \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Connectivities = "{\"items\": {\"oneOf\": [{\"properties\": {\"selector\": {}, \"coefficient\": {\"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"director\": {\"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"type\": \"array\", \"minItems\": 3, \"maxItems\": 3}}, \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"], \"type\": \"object\", \"additionalProperties\": false}]}, \"type\": \"array\"}";
	
}
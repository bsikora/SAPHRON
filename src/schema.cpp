#include "schema.h"

namespace SAPHRON
{
	//INSERT_DEF_HERE
	std::string SAPHRON::JsonSchema::ForceFields = "{\"type\": \"array\", \"items\": {\"oneOf\": [{\"properties\": {\"species\": {\"minItems\": 2, \"maxItems\": 2, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"epsilon\": {\"minimum\": 0, \"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"LennardJones\"]}, \"sigma\": {\"minimum\": 0, \"exclusiveMinimum\": true, \"type\": \"number\"}, \"rcut\": {\"minimum\": 0, \"exclusiveMinimum\": true, \"type\": \"number\"}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"sigma\", \"epsilon\", \"rcut\", \"species\"]}]}}";
	std::string SAPHRON::JsonSchema::LennardJones = "{\"properties\": {\"species\": {\"minItems\": 2, \"maxItems\": 2, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"epsilon\": {\"minimum\": 0, \"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"LennardJones\"]}, \"sigma\": {\"minimum\": 0, \"exclusiveMinimum\": true, \"type\": \"number\"}, \"rcut\": {\"minimum\": 0, \"exclusiveMinimum\": true, \"type\": \"number\"}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"sigma\", \"epsilon\", \"rcut\", \"species\"]}";
	std::string SAPHRON::JsonSchema::Worlds = "{\"minItems\": 1, \"type\": \"array\", \"items\": {\"properties\": {\"skin_thickness\": {\"minimum\": 0, \"exclusiveMinimum\": true, \"type\": \"number\"}, \"dimensions\": {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\"}}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"nlist_cutoff\": {\"minimum\": 0, \"exclusiveMinimum\": true, \"type\": \"number\"}}, \"type\": \"object\", \"required\": [\"type\", \"dimensions\", \"nlist_cutoff\", \"skin_thickness\"]}}";
	std::string SAPHRON::JsonSchema::SimpleWorld = "{\"properties\": {\"skin_thickness\": {\"minimum\": 0, \"exclusiveMinimum\": true, \"type\": \"number\"}, \"dimensions\": {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\"}}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"nlist_cutoff\": {\"minimum\": 0, \"exclusiveMinimum\": true, \"type\": \"number\"}}, \"type\": \"object\", \"required\": [\"type\", \"dimensions\", \"nlist_cutoff\", \"skin_thickness\"]}";
	std::string SAPHRON::JsonSchema::Particles = "{\"minItems\": 1, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"minItems\": 4, \"additionalItems\": false, \"type\": \"array\", \"items\": [{\"minimum\": 1, \"type\": \"integer\"}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\"}}, {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"number\"}}, {\"type\": \"string\"}]}}";
	std::string SAPHRON::JsonSchema::Site = "{\"minItems\": 4, \"additionalItems\": false, \"type\": \"array\", \"items\": [{\"minimum\": 1, \"type\": \"integer\"}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\"}}, {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"number\"}}, {\"type\": \"string\"}]}";
	std::string SAPHRON::JsonSchema::Components = "{\"minProperties\": 1, \"type\": \"object\", \"additionalProperties\": false, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"properties\": {\"count\": {\"minimum\": 1, \"type\": \"integer\"}, \"children\": {\"type\": \"object\", \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"object\"}}}}, \"minProperties\": 1, \"type\": \"object\", \"required\": [\"count\"], \"additionalProperties\": false}}}";
	std::string SAPHRON::JsonSchema::Selector = "{}";
	std::string SAPHRON::JsonSchema::Director = "{\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"number\"}}";
	std::string SAPHRON::JsonSchema::Observer = "{\"properties\": {\"frequency\": {\"minimum\": 1, \"type\": \"integer\"}, \"flags\": {\"properties\": {\"temperature\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"identifier\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_composition\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_count\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"energy\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"sweeps\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_density\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_volume\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"acceptance\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}}, \"type\": \"object\"}}, \"oneOf\": [{\"properties\": {\"file_prefix\": {\"type\": \"string\"}}, \"required\": [\"file_prefix\"]}], \"type\": \"object\"}";
	std::string SAPHRON::JsonSchema::CSVObserver = "{\"properties\": {\"file_prefix\": {\"type\": \"string\"}}, \"required\": [\"file_prefix\"]}";
	std::string SAPHRON::JsonSchema::TranslateMove = "{\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"Translate\"]}, \"dx\": {\"minimum\": 0, \"type\": \"number\"}}, \"type\": \"object\", \"required\": [\"type\", \"dx\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::SphereUnitVectorMove = "{\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"SphereUnitVector\"]}}, \"type\": \"object\", \"required\": [\"type\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::SpeciesSwapMove = "{\"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"SpeciesSwap\"]}}, \"type\": \"object\", \"required\": [\"type\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::ParticleSwapMove = "{\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"ParticleSwap\"]}}, \"type\": \"object\", \"required\": [\"type\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Moves = "{\"type\": \"array\", \"items\": {\"oneOf\": [{\"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"FlipSpin\"]}}, \"type\": \"object\", \"required\": [\"type\"], \"additionalProperties\": false}, {\"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"IdentityChange\"]}}, \"type\": \"object\", \"required\": [\"type\"], \"additionalProperties\": false}, {\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"ParticleSwap\"]}}, \"type\": \"object\", \"required\": [\"type\"], \"additionalProperties\": false}, {\"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"SpeciesSwap\"]}}, \"type\": \"object\", \"required\": [\"type\"], \"additionalProperties\": false}, {\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"SphereUnitVector\"]}}, \"type\": \"object\", \"required\": [\"type\"], \"additionalProperties\": false}, {\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"Translate\"]}, \"dx\": {\"minimum\": 0, \"type\": \"number\"}}, \"type\": \"object\", \"required\": [\"type\", \"dx\"], \"additionalProperties\": false}, {\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"VolumeScale\"]}, \"dv\": {\"minimum\": 0, \"type\": \"number\"}}, \"type\": \"object\", \"required\": [\"type\", \"dv\"], \"additionalProperties\": false}]}}";
	std::string SAPHRON::JsonSchema::IdentityChangeMove = "{\"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"IdentityChange\"]}}, \"type\": \"object\", \"required\": [\"type\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::FlipSpinMove = "{\"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"FlipSpin\"]}}, \"type\": \"object\", \"required\": [\"type\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::GibbsNVTEnsemble = "{\"properties\": {\"sweeps\": {\"minimum\": 1, \"type\": \"integer\"}, \"temperature\": {\"minimum\": 0, \"exclusiveMinimum\": \"true\", \"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"GibbsNVT\"]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"type\": \"object\", \"required\": [\"type\", \"temperature\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::NVTEnsemble = "{\"properties\": {\"sweeps\": {\"minimum\": 1, \"type\": \"integer\"}, \"temperature\": {\"minimum\": 0, \"exclusiveMinimum\": \"true\", \"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"NVT\"]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"type\": \"object\", \"required\": [\"type\", \"temperature\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Ensembles = "{\"oneOf\": [{\"properties\": {\"sweeps\": {\"minimum\": 1, \"type\": \"integer\"}, \"temperature\": {\"minimum\": 0, \"exclusiveMinimum\": \"true\", \"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"NVT\"]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"type\": \"object\", \"required\": [\"type\", \"temperature\"], \"additionalProperties\": false}, {\"properties\": {\"sweeps\": {\"minimum\": 1, \"type\": \"integer\"}, \"temperature\": {\"minimum\": 0, \"exclusiveMinimum\": \"true\", \"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"GibbsNVT\"]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"type\": \"object\", \"required\": [\"type\", \"temperature\"], \"additionalProperties\": false}]}";
	std::string SAPHRON::JsonSchema::P2SAConnectivity = "{\"properties\": {\"selector\": {}, \"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"director\": {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"number\"}}, \"coefficient\": {\"type\": \"number\"}}, \"type\": \"object\", \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Connectivities = "{\"type\": \"array\", \"items\": {\"oneOf\": [{\"properties\": {\"selector\": {}, \"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"director\": {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"number\"}}, \"coefficient\": {\"type\": \"number\"}}, \"type\": \"object\", \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"], \"additionalProperties\": false}]}}";
	
}
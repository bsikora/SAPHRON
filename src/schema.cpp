#include "schema.h"

namespace SAPHRON
{
	//INSERT_DEF_HERE
	std::string SAPHRON::JsonSchema::Simulation = "{\"properties\": {\"sweeps\": {\"minimum\": 1, \"type\": \"integer\"}, \"simtype\": {\"enum\": [\"standard\", \"DOS\"], \"type\": \"string\"}, \"units\": {\"enum\": [\"real\", \"reduced\"], \"type\": \"string\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"mps\": {\"minimum\": 1, \"type\": \"integer\"}}, \"type\": \"object\", \"required\": [\"simtype\", \"sweeps\"]}";
	std::string SAPHRON::JsonSchema::ForceFields = "{\"additionalProperties\": false, \"properties\": {\"bonded\": {\"type\": \"array\"}, \"nonbonded\": {\"type\": \"array\"}, \"electrostatic\": {\"type\": \"array\"}}, \"type\": \"object\"}";
	std::string SAPHRON::JsonSchema::DSFFF = "{\"additionalProperties\": false, \"properties\": {\"species\": {\"minItems\": 2, \"items\": {\"type\": \"string\"}, \"additionalItems\": false, \"maxItems\": 2, \"type\": \"array\"}, \"type\": {\"enum\": [\"DSF\"], \"type\": \"string\"}, \"alpha\": {\"minimum\": 0, \"type\": \"number\"}}, \"type\": \"object\", \"required\": [\"type\", \"alpha\", \"species\"]}";
	std::string SAPHRON::JsonSchema::LebwholLasherFF = "{\"additionalProperties\": false, \"properties\": {\"epsilon\": {\"type\": \"number\"}, \"gamma\": {\"type\": \"number\"}, \"type\": {\"enum\": [\"LebwohlLasher\"], \"type\": \"string\"}, \"species\": {\"minItems\": 2, \"items\": {\"type\": \"string\"}, \"additionalItems\": false, \"maxItems\": 2, \"type\": \"array\"}}, \"type\": \"object\", \"required\": [\"type\", \"epsilon\", \"gamma\", \"species\"]}";
	std::string SAPHRON::JsonSchema::LennardJonesFF = "{\"additionalProperties\": false, \"properties\": {\"epsilon\": {\"minimum\": 0, \"type\": \"number\"}, \"sigma\": {\"exclusiveMinimum\": true, \"minimum\": 0, \"type\": \"number\"}, \"type\": {\"enum\": [\"LennardJones\"], \"type\": \"string\"}, \"species\": {\"minItems\": 2, \"items\": {\"type\": \"string\"}, \"additionalItems\": false, \"maxItems\": 2, \"type\": \"array\"}}, \"type\": \"object\", \"required\": [\"type\", \"sigma\", \"epsilon\", \"species\"]}";
	std::string SAPHRON::JsonSchema::Worlds = "{\"minItems\": 1, \"items\": {\"properties\": {\"nlist_cutoff\": {\"exclusiveMinimum\": true, \"minimum\": 0, \"type\": \"number\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"temperature\": {\"minimum\": 0, \"type\": \"number\"}, \"type\": {\"enum\": [\"Simple\"], \"type\": \"string\"}, \"particles\": {\"type\": \"array\"}, \"dimensions\": {\"minItems\": 3, \"items\": {\"minimum\": 0, \"type\": \"number\"}, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\"}, \"r_cutoff\": {\"exclusiveMinimum\": true, \"minimum\": 0, \"type\": \"number\"}, \"components\": {\"type\": \"object\"}}, \"type\": \"object\", \"required\": [\"type\", \"dimensions\", \"r_cutoff\", \"components\"]}, \"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::SimpleWorld = "{\"properties\": {\"nlist_cutoff\": {\"exclusiveMinimum\": true, \"minimum\": 0, \"type\": \"number\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"temperature\": {\"minimum\": 0, \"type\": \"number\"}, \"type\": {\"enum\": [\"Simple\"], \"type\": \"string\"}, \"particles\": {\"type\": \"array\"}, \"dimensions\": {\"minItems\": 3, \"items\": {\"minimum\": 0, \"type\": \"number\"}, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\"}, \"r_cutoff\": {\"exclusiveMinimum\": true, \"minimum\": 0, \"type\": \"number\"}, \"components\": {\"type\": \"object\"}}, \"type\": \"object\", \"required\": [\"type\", \"dimensions\", \"r_cutoff\", \"components\"]}";
	std::string SAPHRON::JsonSchema::Particles = "{\"minItems\": 1, \"items\": {\"minItems\": 4, \"items\": [{\"minimum\": 1, \"type\": \"integer\"}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"minItems\": 3, \"items\": {\"minimum\": 0, \"type\": \"number\"}, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\"}, {\"minItems\": 3, \"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\"}, {\"type\": \"string\"}], \"additionalItems\": false, \"type\": \"array\"}, \"additionalItems\": false, \"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::Site = "{\"minItems\": 4, \"items\": [{\"minimum\": 1, \"type\": \"integer\"}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"minItems\": 3, \"items\": {\"minimum\": 0, \"type\": \"number\"}, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\"}, {\"minItems\": 3, \"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\"}, {\"type\": \"string\"}], \"additionalItems\": false, \"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::Components = "{\"minProperties\": 1, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"additionalProperties\": false, \"minProperties\": 1, \"properties\": {\"mass\": {\"minimum\": 0, \"type\": \"number\"}, \"count\": {\"minimum\": 1, \"type\": \"integer\"}, \"charge\": {\"type\": \"number\"}, \"children\": {\"minItems\": 1, \"items\": {\"properties\": {\"charge\": {\"type\": \"number\"}, \"mass\": {\"minimum\": 0, \"type\": \"number\"}, \"species\": {\"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"species\"]}, \"type\": \"array\"}}, \"type\": \"object\", \"required\": [\"count\"]}}, \"additionalProperties\": false, \"type\": \"object\"}";
	std::string SAPHRON::JsonSchema::Selector = "{}";
	std::string SAPHRON::JsonSchema::Director = "{\"minItems\": 3, \"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::Observer = "{\"oneOf\": [{\"properties\": {\"file_prefix\": {\"type\": \"string\"}}, \"required\": [\"file_prefix\"]}], \"type\": \"object\", \"properties\": {\"flags\": {\"properties\": {\"acceptance\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"identifier\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"world_density\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"temperature\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"pressure\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"sweeps\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"world_count\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"world_composition\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"energy\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}, \"world_volume\": {\"maximum\": 1, \"minimum\": 0, \"type\": \"integer\"}}, \"type\": \"object\"}, \"frequency\": {\"minimum\": 1, \"type\": \"integer\"}}}";
	std::string SAPHRON::JsonSchema::CSVObserver = "{\"properties\": {\"file_prefix\": {\"type\": \"string\"}}, \"required\": [\"file_prefix\"]}";
	std::string SAPHRON::JsonSchema::VolumeSwapMove = "{\"additionalProperties\": false, \"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"dv\": {\"minimum\": 0, \"type\": \"number\"}, \"type\": {\"enum\": [\"VolumeSwap\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\", \"dv\"]}";
	std::string SAPHRON::JsonSchema::RotateMove = "{\"additionalProperties\": false, \"properties\": {\"maxangle\": {\"exclusiveMinimum\": true, \"maximum\": 6.283185307179586, \"minimum\": 0, \"type\": \"number\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"enum\": [\"Rotate\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\", \"maxangle\"]}";
	std::string SAPHRON::JsonSchema::TranslateMove = "{\"additionalProperties\": false, \"properties\": {\"dx\": {\"minimum\": 0, \"type\": \"number\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"enum\": [\"Translate\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\", \"dx\"]}";
	std::string SAPHRON::JsonSchema::DirectorRotateMove = "{\"additionalProperties\": false, \"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"enum\": [\"DirectorRotate\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::SpeciesSwapMove = "{\"additionalProperties\": false, \"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"enum\": [\"SpeciesSwap\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::ParticleSwapMove = "{\"additionalProperties\": false, \"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"enum\": [\"ParticleSwap\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::Moves = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::RandomIdentityMove = "{\"additionalProperties\": false, \"properties\": {\"identities\": {\"items\": {\"type\": \"string\"}, \"minIems\": 1, \"uniqueItems\": true, \"type\": \"array\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"enum\": [\"RandomIdentity\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\", \"identities\"]}";
	std::string SAPHRON::JsonSchema::FlipSpinMove = "{\"additionalProperties\": false, \"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"enum\": [\"FlipSpin\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::P2SAConnectivity = "{\"additionalProperties\": false, \"properties\": {\"coefficient\": {\"type\": \"number\"}, \"selector\": {}, \"director\": {\"minItems\": 3, \"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\"}, \"type\": {\"enum\": [\"P2SA\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"]}";
	std::string SAPHRON::JsonSchema::Connectivities = "{\"items\": {\"oneOf\": [{\"additionalProperties\": false, \"properties\": {\"coefficient\": {\"type\": \"number\"}, \"selector\": {}, \"director\": {\"minItems\": 3, \"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\"}, \"type\": {\"enum\": [\"P2SA\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"]}]}, \"type\": \"array\"}";
	
}
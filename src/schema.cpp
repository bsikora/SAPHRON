#include "schema.h"

namespace SAPHRON
{
	//INSERT_DEF_HERE
	std::string SAPHRON::JsonSchema::ForceFields = "{\"properties\": {\"nonbonded\": {\"type\": \"array\"}, \"bonded\": {\"type\": \"array\"}, \"electrostatic\": {\"type\": \"array\"}}, \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::LebwholLasher = "{\"properties\": {\"epsilon\": {\"type\": \"number\"}, \"type\": {\"enum\": [\"LebwohlLasher\"], \"type\": \"string\"}, \"gamma\": {\"type\": \"number\"}, \"species\": {\"items\": {\"type\": \"string\"}, \"additionalItems\": false, \"minItems\": 2, \"type\": \"array\", \"maxItems\": 2}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"epsilon\", \"gamma\", \"species\"]}";
	std::string SAPHRON::JsonSchema::LennardJones = "{\"properties\": {\"epsilon\": {\"minimum\": 0, \"type\": \"number\"}, \"sigma\": {\"minimum\": 0, \"exclusiveMinimum\": true, \"type\": \"number\"}, \"type\": {\"enum\": [\"LennardJones\"], \"type\": \"string\"}, \"rcut\": {\"minimum\": 0, \"exclusiveMinimum\": true, \"type\": \"number\"}, \"species\": {\"items\": {\"type\": \"string\"}, \"additionalItems\": false, \"minItems\": 2, \"type\": \"array\", \"maxItems\": 2}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"sigma\", \"epsilon\", \"rcut\", \"species\"]}";
	std::string SAPHRON::JsonSchema::Worlds = "{\"items\": {\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"dimensions\": {\"items\": {\"minimum\": 0, \"type\": \"number\"}, \"additionalItems\": false, \"minItems\": 3, \"type\": \"array\", \"maxItems\": 3}, \"type\": {\"enum\": [\"Simple\"], \"type\": \"string\"}, \"nlist_cutoff\": {\"minimum\": 0, \"exclusiveMinimum\": true, \"type\": \"number\"}, \"skin_thickness\": {\"minimum\": 0, \"exclusiveMinimum\": true, \"type\": \"number\"}}, \"type\": \"object\", \"required\": [\"type\", \"dimensions\", \"nlist_cutoff\", \"skin_thickness\"]}, \"minItems\": 1, \"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::SimpleWorld = "{\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"dimensions\": {\"items\": {\"minimum\": 0, \"type\": \"number\"}, \"additionalItems\": false, \"minItems\": 3, \"type\": \"array\", \"maxItems\": 3}, \"type\": {\"enum\": [\"Simple\"], \"type\": \"string\"}, \"nlist_cutoff\": {\"minimum\": 0, \"exclusiveMinimum\": true, \"type\": \"number\"}, \"skin_thickness\": {\"minimum\": 0, \"exclusiveMinimum\": true, \"type\": \"number\"}}, \"type\": \"object\", \"required\": [\"type\", \"dimensions\", \"nlist_cutoff\", \"skin_thickness\"]}";
	std::string SAPHRON::JsonSchema::Particles = "{\"items\": {\"items\": [{\"minimum\": 1, \"type\": \"integer\"}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"items\": {\"minimum\": 0, \"type\": \"number\"}, \"additionalItems\": false, \"minItems\": 3, \"type\": \"array\", \"maxItems\": 3}, {\"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"minItems\": 3, \"type\": \"array\", \"maxItems\": 3}, {\"type\": \"string\"}], \"additionalItems\": false, \"minItems\": 4, \"type\": \"array\"}, \"additionalItems\": false, \"minItems\": 1, \"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::Site = "{\"items\": [{\"minimum\": 1, \"type\": \"integer\"}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"items\": {\"minimum\": 0, \"type\": \"number\"}, \"additionalItems\": false, \"minItems\": 3, \"type\": \"array\", \"maxItems\": 3}, {\"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"minItems\": 3, \"type\": \"array\", \"maxItems\": 3}, {\"type\": \"string\"}], \"additionalItems\": false, \"minItems\": 4, \"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::Components = "{\"minProperties\": 1, \"type\": \"object\", \"additionalProperties\": false, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"minProperties\": 1, \"properties\": {\"children\": {\"type\": \"object\", \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"object\"}}}, \"count\": {\"minimum\": 1, \"type\": \"integer\"}}, \"type\": \"object\", \"required\": [\"count\"], \"additionalProperties\": false}}}";
	std::string SAPHRON::JsonSchema::Selector = "{}";
	std::string SAPHRON::JsonSchema::Director = "{\"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"minItems\": 3, \"type\": \"array\", \"maxItems\": 3}";
	std::string SAPHRON::JsonSchema::Observer = "{\"properties\": {\"flags\": {\"properties\": {\"sweeps\": {\"minimum\": 0, \"maximum\": 1, \"type\": \"integer\"}, \"pressure\": {\"minimum\": 0, \"maximum\": 1, \"type\": \"integer\"}, \"identifier\": {\"minimum\": 0, \"maximum\": 1, \"type\": \"integer\"}, \"world_composition\": {\"minimum\": 0, \"maximum\": 1, \"type\": \"integer\"}, \"world_volume\": {\"minimum\": 0, \"maximum\": 1, \"type\": \"integer\"}, \"temperature\": {\"minimum\": 0, \"maximum\": 1, \"type\": \"integer\"}, \"world_density\": {\"minimum\": 0, \"maximum\": 1, \"type\": \"integer\"}, \"acceptance\": {\"minimum\": 0, \"maximum\": 1, \"type\": \"integer\"}, \"energy\": {\"minimum\": 0, \"maximum\": 1, \"type\": \"integer\"}, \"world_count\": {\"minimum\": 0, \"maximum\": 1, \"type\": \"integer\"}}, \"type\": \"object\"}, \"frequency\": {\"minimum\": 1, \"type\": \"integer\"}}, \"oneOf\": [{\"properties\": {\"file_prefix\": {\"type\": \"string\"}}, \"required\": [\"file_prefix\"]}], \"type\": \"object\"}";
	std::string SAPHRON::JsonSchema::CSVObserver = "{\"properties\": {\"file_prefix\": {\"type\": \"string\"}}, \"required\": [\"file_prefix\"]}";
	std::string SAPHRON::JsonSchema::TranslateMove = "{\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"enum\": [\"Translate\"], \"type\": \"string\"}, \"dx\": {\"minimum\": 0, \"type\": \"number\"}}, \"type\": \"object\", \"required\": [\"type\", \"dx\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::DirectorRotateMove = "{\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"enum\": [\"DirectorRotate\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::SpeciesSwapMove = "{\"properties\": {\"type\": {\"enum\": [\"SpeciesSwap\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::ParticleSwapMove = "{\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"enum\": [\"ParticleSwap\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Moves = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::RandomIdentityMove = "{\"properties\": {\"type\": {\"enum\": [\"IdentityChange\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::FlipSpinMove = "{\"properties\": {\"type\": {\"enum\": [\"FlipSpin\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::GibbsNVTEnsemble = "{\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"temperature\": {\"minimum\": 0, \"exclusiveMinimum\": \"true\", \"type\": \"number\"}, \"type\": {\"enum\": [\"GibbsNVT\"], \"type\": \"string\"}, \"sweeps\": {\"minimum\": 1, \"type\": \"integer\"}}, \"type\": \"object\", \"required\": [\"type\", \"temperature\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::NVTEnsemble = "{\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"temperature\": {\"minimum\": 0, \"exclusiveMinimum\": \"true\", \"type\": \"number\"}, \"type\": {\"enum\": [\"NVT\"], \"type\": \"string\"}, \"sweeps\": {\"minimum\": 1, \"type\": \"integer\"}}, \"type\": \"object\", \"required\": [\"type\", \"temperature\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Ensembles = "{\"oneOf\": [{\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"temperature\": {\"minimum\": 0, \"exclusiveMinimum\": \"true\", \"type\": \"number\"}, \"type\": {\"enum\": [\"NVT\"], \"type\": \"string\"}, \"sweeps\": {\"minimum\": 1, \"type\": \"integer\"}}, \"type\": \"object\", \"required\": [\"type\", \"temperature\"], \"additionalProperties\": false}, {\"properties\": {\"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"temperature\": {\"minimum\": 0, \"exclusiveMinimum\": \"true\", \"type\": \"number\"}, \"type\": {\"enum\": [\"GibbsNVT\"], \"type\": \"string\"}, \"sweeps\": {\"minimum\": 1, \"type\": \"integer\"}}, \"type\": \"object\", \"required\": [\"type\", \"temperature\"], \"additionalProperties\": false}]}";
	std::string SAPHRON::JsonSchema::P2SAConnectivity = "{\"properties\": {\"director\": {\"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"minItems\": 3, \"type\": \"array\", \"maxItems\": 3}, \"selector\": {}, \"coefficient\": {\"type\": \"number\"}, \"type\": {\"enum\": [\"P2SA\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"], \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Connectivities = "{\"items\": {\"oneOf\": [{\"properties\": {\"director\": {\"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"minItems\": 3, \"type\": \"array\", \"maxItems\": 3}, \"selector\": {}, \"coefficient\": {\"type\": \"number\"}, \"type\": {\"enum\": [\"P2SA\"], \"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"], \"additionalProperties\": false}]}, \"type\": \"array\"}";
	
}
#include "schema.h"

namespace SAPHRON
{
	//INSERT_DEF_HERE
	std::string SAPHRON::JsonSchema::ForceFields = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"bonded\": {\"type\": \"array\"}, \"electrostatic\": {\"type\": \"array\"}, \"nonbonded\": {\"type\": \"array\"}}}";
	std::string SAPHRON::JsonSchema::LebwholLasher = "{\"required\": [\"type\", \"epsilon\", \"gamma\", \"species\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"species\": {\"minItems\": 2, \"additionalItems\": false, \"maxItems\": 2, \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"epsilon\": {\"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"LebwohlLasher\"]}, \"gamma\": {\"type\": \"number\"}}}";
	std::string SAPHRON::JsonSchema::LennardJones = "{\"required\": [\"type\", \"sigma\", \"epsilon\", \"rcut\", \"species\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"sigma\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"epsilon\": {\"type\": \"number\", \"minimum\": 0}, \"species\": {\"minItems\": 2, \"additionalItems\": false, \"maxItems\": 2, \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"type\": {\"type\": \"string\", \"enum\": [\"LennardJones\"]}, \"rcut\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}}}";
	std::string SAPHRON::JsonSchema::Worlds = "{\"minItems\": 1, \"type\": \"array\", \"items\": {\"required\": [\"type\", \"dimensions\", \"nlist_cutoff\", \"skin_thickness\"], \"type\": \"object\", \"properties\": {\"skin_thickness\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"nlist_cutoff\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"dimensions\": {\"minItems\": 3, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\", \"items\": {\"type\": \"number\", \"minimum\": 0}}}}}";
	std::string SAPHRON::JsonSchema::SimpleWorld = "{\"required\": [\"type\", \"dimensions\", \"nlist_cutoff\", \"skin_thickness\"], \"type\": \"object\", \"properties\": {\"skin_thickness\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"nlist_cutoff\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"dimensions\": {\"minItems\": 3, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\", \"items\": {\"type\": \"number\", \"minimum\": 0}}}}";
	std::string SAPHRON::JsonSchema::Particles = "{\"additionalItems\": false, \"minItems\": 1, \"type\": \"array\", \"items\": {\"additionalItems\": false, \"minItems\": 4, \"type\": \"array\", \"items\": [{\"type\": \"integer\", \"minimum\": 1}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"minItems\": 3, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\", \"items\": {\"type\": \"number\", \"minimum\": 0}}, {\"minItems\": 3, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\", \"items\": {\"type\": \"number\"}}, {\"type\": \"string\"}]}}";
	std::string SAPHRON::JsonSchema::Site = "{\"additionalItems\": false, \"minItems\": 4, \"type\": \"array\", \"items\": [{\"type\": \"integer\", \"minimum\": 1}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"minItems\": 3, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\", \"items\": {\"type\": \"number\", \"minimum\": 0}}, {\"minItems\": 3, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\", \"items\": {\"type\": \"number\"}}, {\"type\": \"string\"}]}";
	std::string SAPHRON::JsonSchema::Components = "{\"minProperties\": 1, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"required\": [\"count\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"count\": {\"type\": \"integer\", \"minimum\": 1}, \"children\": {\"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"object\"}}, \"type\": \"object\"}}, \"minProperties\": 1}}, \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Selector = "{}";
	std::string SAPHRON::JsonSchema::Director = "{\"minItems\": 3, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\", \"items\": {\"type\": \"number\"}}";
	std::string SAPHRON::JsonSchema::Observer = "{\"oneOf\": [{\"required\": [\"file_prefix\"], \"properties\": {\"file_prefix\": {\"type\": \"string\"}}}], \"type\": \"object\", \"properties\": {\"flags\": {\"type\": \"object\", \"properties\": {\"identifier\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"energy\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_count\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"acceptance\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"temperature\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_volume\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_density\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_composition\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"sweeps\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}}}, \"frequency\": {\"type\": \"integer\", \"minimum\": 1}}}";
	std::string SAPHRON::JsonSchema::CSVObserver = "{\"required\": [\"file_prefix\"], \"properties\": {\"file_prefix\": {\"type\": \"string\"}}}";
	std::string SAPHRON::JsonSchema::TranslateMove = "{\"required\": [\"type\", \"dx\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"Translate\"]}, \"dx\": {\"type\": \"number\", \"minimum\": 0}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}}";
	std::string SAPHRON::JsonSchema::DirectorRotateMove = "{\"required\": [\"type\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"DirectorRotate\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}}";
	std::string SAPHRON::JsonSchema::SpeciesSwapMove = "{\"required\": [\"type\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"SpeciesSwap\"]}}}";
	std::string SAPHRON::JsonSchema::ParticleSwapMove = "{\"required\": [\"type\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"ParticleSwap\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}}";
	std::string SAPHRON::JsonSchema::Moves = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::IdentityChangeMove = "{\"required\": [\"type\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"IdentityChange\"]}}}";
	std::string SAPHRON::JsonSchema::FlipSpinMove = "{\"required\": [\"type\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"FlipSpin\"]}}}";
	std::string SAPHRON::JsonSchema::GibbsNVTEnsemble = "{\"required\": [\"type\", \"temperature\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"temperature\": {\"exclusiveMinimum\": \"true\", \"type\": \"number\", \"minimum\": 0}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"GibbsNVT\"]}, \"sweeps\": {\"type\": \"integer\", \"minimum\": 1}}}";
	std::string SAPHRON::JsonSchema::NVTEnsemble = "{\"required\": [\"type\", \"temperature\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"temperature\": {\"exclusiveMinimum\": \"true\", \"type\": \"number\", \"minimum\": 0}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"NVT\"]}, \"sweeps\": {\"type\": \"integer\", \"minimum\": 1}}}";
	std::string SAPHRON::JsonSchema::Ensembles = "{\"oneOf\": [{\"required\": [\"type\", \"temperature\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"temperature\": {\"exclusiveMinimum\": \"true\", \"type\": \"number\", \"minimum\": 0}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"NVT\"]}, \"sweeps\": {\"type\": \"integer\", \"minimum\": 1}}}, {\"required\": [\"type\", \"temperature\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"temperature\": {\"exclusiveMinimum\": \"true\", \"type\": \"number\", \"minimum\": 0}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"GibbsNVT\"]}, \"sweeps\": {\"type\": \"integer\", \"minimum\": 1}}}]}";
	std::string SAPHRON::JsonSchema::P2SAConnectivity = "{\"required\": [\"type\", \"coefficient\", \"director\", \"selector\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"coefficient\": {\"type\": \"number\"}, \"selector\": {}, \"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"director\": {\"minItems\": 3, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\", \"items\": {\"type\": \"number\"}}}}";
	std::string SAPHRON::JsonSchema::Connectivities = "{\"type\": \"array\", \"items\": {\"oneOf\": [{\"required\": [\"type\", \"coefficient\", \"director\", \"selector\"], \"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"coefficient\": {\"type\": \"number\"}, \"selector\": {}, \"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"director\": {\"minItems\": 3, \"additionalItems\": false, \"maxItems\": 3, \"type\": \"array\", \"items\": {\"type\": \"number\"}}}}]}}";
	
}
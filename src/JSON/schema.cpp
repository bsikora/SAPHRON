#include "schema.h"

namespace SAPHRON
{
	//INSERT_DEF_HERE
	std::string SAPHRON::JsonSchema::ElasticCoeffOP = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"type\": {\"enum\": [\"ElasticCoeff\"], \"type\": \"string\"}, \"mode\": {\"enum\": [\"twist\"], \"type\": \"string\"}, \"world\": {\"type\": \"integer\", \"minimum\": 0}, \"xrange\": {\"items\": {\"type\": \"number\"}, \"type\": \"array\", \"maxItems\": 2, \"minItems\": 2}}, \"required\": [\"type\", \"mode\", \"xrange\", \"world\"]}";
	std::string SAPHRON::JsonSchema::WangLandauOP = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"type\": {\"enum\": [\"WangLandau\"], \"type\": \"string\"}}, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::Histogram = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"counts\": {\"items\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": \"array\"}, \"values\": {\"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"max\": {\"type\": \"number\"}, \"min\": {\"type\": \"number\"}, \"binwidth\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"bincount\": {\"type\": \"integer\", \"minimum\": 1}}, \"required\": [\"min\", \"max\"]}";
	std::string SAPHRON::JsonSchema::DOSSimulation = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"target_flatness\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"exclusiveMaximum\": true, \"maximum\": 1, \"minimum\": 0}, \"convergence_factor\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"reset_freq\": {\"type\": \"integer\", \"minimum\": 0}}}";
	std::string SAPHRON::JsonSchema::Simulation = "{\"type\": \"object\", \"properties\": {\"iterations\": {\"type\": \"integer\", \"minimum\": 1}, \"units\": {\"enum\": [\"real\", \"reduced\"], \"type\": \"string\"}, \"mpi\": {\"type\": \"integer\", \"minimum\": 1}, \"simtype\": {\"enum\": [\"standard\", \"DOS\"], \"type\": \"string\"}}, \"required\": [\"simtype\", \"iterations\"]}";
	std::string SAPHRON::JsonSchema::ForceFields = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"nonbonded\": {\"type\": \"array\"}, \"bonded\": {\"type\": \"array\"}, \"electrostatic\": {\"type\": \"array\"}}}";
	std::string SAPHRON::JsonSchema::DebyeHuckelFF = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"species\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\", \"maxItems\": 2, \"minItems\": 2, \"additionalItems\": false}, \"type\": {\"enum\": [\"DebyeHuckel\"], \"type\": \"string\"}, \"kappa\": {\"type\": \"number\", \"minimum\": 0}}, \"required\": [\"type\", \"kappa\", \"species\"]}";
	std::string SAPHRON::JsonSchema::DSFFF = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"species\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\", \"maxItems\": 2, \"minItems\": 2, \"additionalItems\": false}, \"type\": {\"enum\": [\"DSF\"], \"type\": \"string\"}, \"alpha\": {\"type\": \"number\", \"minimum\": 0}}, \"required\": [\"type\", \"alpha\", \"species\"]}";
	std::string SAPHRON::JsonSchema::LebwholLasherFF = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"species\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\", \"maxItems\": 2, \"minItems\": 2, \"additionalItems\": false}, \"type\": {\"enum\": [\"LebwohlLasher\"], \"type\": \"string\"}, \"gamma\": {\"type\": \"number\"}, \"epsilon\": {\"type\": \"number\"}}, \"required\": [\"type\", \"epsilon\", \"gamma\", \"species\"]}";
	std::string SAPHRON::JsonSchema::LennardJonesFF = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"species\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\", \"maxItems\": 2, \"minItems\": 2, \"additionalItems\": false}, \"type\": {\"enum\": [\"LennardJones\"], \"type\": \"string\"}, \"epsilon\": {\"type\": \"number\", \"minimum\": 0}, \"sigma\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}}, \"required\": [\"type\", \"sigma\", \"epsilon\", \"species\"]}";
	std::string SAPHRON::JsonSchema::Components = "{\"components\": {\"additionalProperties\": false, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"object\", \"properties\": {\"count\": {\"type\": \"integer\", \"minimum\": 1}}, \"required\": [\"count\"]}}, \"type\": \"object\", \"minProperties\": 1}}";
	std::string SAPHRON::JsonSchema::Worlds = "{\"items\": {\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"temperature\": {\"type\": \"number\", \"minimum\": 0}, \"r_cutoff\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"type\": {\"enum\": [\"Simple\"], \"type\": \"string\"}, \"nlist_cutoff\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"chemical_potential\": {\"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"number\"}}, \"type\": \"object\"}, \"components\": {\"components\": {\"additionalProperties\": false, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"object\", \"properties\": {\"count\": {\"type\": \"integer\", \"minimum\": 1}}, \"required\": [\"count\"]}}, \"type\": \"object\", \"minProperties\": 1}}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"particles\": {\"type\": \"array\"}, \"pack\": {\"type\": \"object\", \"properties\": {\"density\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"count\": {\"type\": \"integer\", \"minimum\": 1}, \"composition\": {\"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"maximum\": 1.0, \"minimum\": 0.0}}, \"type\": \"object\"}}}, \"dimensions\": {\"items\": {\"type\": \"number\", \"minimum\": 0}, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"additionalItems\": false}}, \"required\": [\"type\", \"dimensions\", \"r_cutoff\", \"components\"]}, \"type\": \"array\", \"minItems\": 1}";
	std::string SAPHRON::JsonSchema::SimpleWorld = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"temperature\": {\"type\": \"number\", \"minimum\": 0}, \"r_cutoff\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"type\": {\"enum\": [\"Simple\"], \"type\": \"string\"}, \"nlist_cutoff\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"chemical_potential\": {\"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"number\"}}, \"type\": \"object\"}, \"components\": {\"components\": {\"additionalProperties\": false, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"object\", \"properties\": {\"count\": {\"type\": \"integer\", \"minimum\": 1}}, \"required\": [\"count\"]}}, \"type\": \"object\", \"minProperties\": 1}}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"particles\": {\"type\": \"array\"}, \"pack\": {\"type\": \"object\", \"properties\": {\"density\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"count\": {\"type\": \"integer\", \"minimum\": 1}, \"composition\": {\"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"maximum\": 1.0, \"minimum\": 0.0}}, \"type\": \"object\"}}}, \"dimensions\": {\"items\": {\"type\": \"number\", \"minimum\": 0}, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"additionalItems\": false}}, \"required\": [\"type\", \"dimensions\", \"r_cutoff\", \"components\"]}";
	std::string SAPHRON::JsonSchema::Particles = "{\"items\": {\"items\": [{\"type\": \"integer\", \"minimum\": 1}, {\"type\": \"string\"}, {\"items\": {\"type\": \"number\", \"minimum\": 0}, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"additionalItems\": false}, {\"items\": {\"type\": \"number\"}, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"additionalItems\": false}, {\"type\": \"string\"}], \"type\": \"array\", \"maxItems\": 4, \"minItems\": 3, \"additionalItems\": false}, \"type\": \"array\", \"minItems\": 1, \"additionalItems\": false}";
	std::string SAPHRON::JsonSchema::Site = "{\"items\": [{\"type\": \"integer\", \"minimum\": 1}, {\"type\": \"string\"}, {\"items\": {\"type\": \"number\", \"minimum\": 0}, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"additionalItems\": false}, {\"items\": {\"type\": \"number\"}, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"additionalItems\": false}, {\"type\": \"string\"}], \"type\": \"array\", \"maxItems\": 4, \"minItems\": 3, \"additionalItems\": false}";
	std::string SAPHRON::JsonSchema::Blueprints = "{\"additionalProperties\": false, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"additionalProperties\": false, \"minProperties\": 1, \"type\": \"object\", \"properties\": {\"mass\": {\"type\": \"number\", \"minimum\": 0}, \"count\": {\"type\": \"integer\", \"minimum\": 1}, \"charge\": {\"type\": \"number\"}, \"children\": {\"items\": {\"type\": \"object\", \"properties\": {\"species\": {\"type\": \"string\"}, \"mass\": {\"type\": \"number\", \"minimum\": 0}, \"charge\": {\"type\": \"number\"}}, \"required\": [\"species\"]}, \"type\": \"array\", \"minItems\": 1}}, \"required\": [\"count\"]}}, \"type\": \"object\", \"minProperties\": 1}";
	std::string SAPHRON::JsonSchema::Selector = "{}";
	std::string SAPHRON::JsonSchema::Director = "{\"items\": {\"type\": \"number\"}, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"additionalItems\": false}";
	std::string SAPHRON::JsonSchema::Observers = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::JSONObserver = "{\"additionalProperties\": false, \"properties\": {\"type\": {\"enum\": [\"JSON\"], \"type\": \"string\"}, \"frequency\": {\"type\": \"integer\", \"minimum\": 1}, \"prefix\": {\"type\": \"string\"}}, \"required\": [\"type\", \"prefix\", \"frequency\"]}";
	std::string SAPHRON::JsonSchema::DLMFileObserver = "{\"additionalProperties\": false, \"properties\": {\"prefix\": {\"type\": \"string\"}, \"type\": {\"enum\": [\"DLMFile\"], \"type\": \"string\"}, \"delimiter\": {\"type\": \"string\"}, \"extension\": {\"type\": \"string\"}, \"flags\": {\"type\": \"object\", \"properties\": {\"hist_upper_outliers\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"hist_interval\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_volume\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"particle_species\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"energy_intravdw\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"particle_parent_id\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_pzz\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_chem_pot\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_pxy\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"iteration\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"move_acceptances\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"hist_bin_count\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_pxx\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_composition\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"particle_parent_species\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"hist_values\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"particle\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_tensor\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_pyz\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"energy_interelect\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"dos_flatness\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"particle_neighbors\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"energy_components\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"histogram\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_energy\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_temperature\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_pressure\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_density\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"energy_bonded\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"energy_connectivity\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_pyy\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"particle_director\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"hist_counts\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"particle_id\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"simulation\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_tail\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_pxz\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"hist_lower_outliers\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"particle_position\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"energy_intraelect\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_ideal\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"dos_factor\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"energy_intervdw\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}}}, \"frequency\": {\"type\": \"integer\", \"minimum\": 1}, \"fixedwmode\": {\"type\": \"boolean\"}, \"colwidth\": {\"type\": \"integer\", \"minimum\": 1}}, \"required\": [\"type\", \"prefix\", \"frequency\", \"flags\"]}";
	std::string SAPHRON::JsonSchema::DeleteParticleMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"species\": {\"minimumItems\": 1, \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"type\": {\"enum\": [\"DeleteParticle\"], \"type\": \"string\"}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"required\": [\"type\", \"species\"]}";
	std::string SAPHRON::JsonSchema::InsertParticleMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"stash_count\": {\"type\": \"integer\", \"minimum\": 1}, \"species\": {\"minimumItems\": 1, \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"type\": {\"enum\": [\"InsertParticle\"], \"type\": \"string\"}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}}, \"required\": [\"type\", \"stash_count\", \"species\"]}";
	std::string SAPHRON::JsonSchema::VolumeSwapMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"dv\": {\"type\": \"number\", \"minimum\": 0}, \"type\": {\"enum\": [\"VolumeSwap\"], \"type\": \"string\"}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"required\": [\"type\", \"dv\"]}";
	std::string SAPHRON::JsonSchema::RotateMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"type\": {\"enum\": [\"Rotate\"], \"type\": \"string\"}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"maxangle\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"maximum\": 6.283185307179586, \"minimum\": 0}}, \"required\": [\"type\", \"maxangle\"]}";
	std::string SAPHRON::JsonSchema::TranslateMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"type\": {\"enum\": [\"Translate\"], \"type\": \"string\"}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"dx\": {\"type\": \"number\", \"minimum\": 0}}, \"required\": [\"type\", \"dx\"]}";
	std::string SAPHRON::JsonSchema::DirectorRotateMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"type\": {\"enum\": [\"DirectorRotate\"], \"type\": \"string\"}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::SpeciesSwapMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"type\": {\"enum\": [\"SpeciesSwap\"], \"type\": \"string\"}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::ParticleSwapMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"type\": {\"enum\": [\"ParticleSwap\"], \"type\": \"string\"}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::Moves = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::RandomIdentityMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"type\": {\"enum\": [\"RandomIdentity\"], \"type\": \"string\"}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"identities\": {\"minIems\": 1, \"items\": {\"type\": \"string\"}, \"type\": \"array\", \"uniqueItems\": true}}, \"required\": [\"type\", \"identities\"]}";
	std::string SAPHRON::JsonSchema::FlipSpinMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"type\": {\"enum\": [\"FlipSpin\"], \"type\": \"string\"}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::P2SAConnectivity = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"coefficient\": {\"type\": \"number\"}, \"type\": {\"enum\": [\"P2SA\"], \"type\": \"string\"}, \"director\": {\"items\": {\"type\": \"number\"}, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"additionalItems\": false}, \"selector\": {}}, \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"]}";
	std::string SAPHRON::JsonSchema::Connectivities = "{\"items\": {\"oneOf\": [{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"coefficient\": {\"type\": \"number\"}, \"type\": {\"enum\": [\"P2SA\"], \"type\": \"string\"}, \"director\": {\"items\": {\"type\": \"number\"}, \"type\": \"array\", \"maxItems\": 3, \"minItems\": 3, \"additionalItems\": false}, \"selector\": {}}, \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"]}]}, \"type\": \"array\"}";
	
}
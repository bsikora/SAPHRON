#include "schema.h"

namespace SAPHRON
{
	//INSERT_DEF_HERE
	std::string SAPHRON::JsonSchema::ElasticCoeffOP = "{\"required\": [\"type\", \"mode\", \"xrange\", \"world\"], \"type\": \"object\", \"properties\": {\"xrange\": {\"minItems\": 2, \"maxItems\": 2, \"type\": \"array\", \"items\": {\"type\": \"number\"}}, \"mode\": {\"type\": \"string\", \"enum\": [\"twist\"]}, \"world\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"ElasticCoeff\"]}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::WangLandauOP = "{\"required\": [\"type\"], \"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"WangLandau\"]}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Histogram = "{\"required\": [\"min\", \"max\"], \"type\": \"object\", \"properties\": {\"min\": {\"type\": \"number\"}, \"max\": {\"type\": \"number\"}, \"values\": {\"type\": \"array\", \"items\": {\"type\": \"number\"}}, \"binwidth\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"bincount\": {\"minimum\": 1, \"type\": \"integer\"}, \"counts\": {\"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"integer\"}}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::DOSSimulation = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"target_flatness\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMaximum\": true, \"exclusiveMinimum\": true, \"maximum\": 1}, \"reset_freq\": {\"minimum\": 0, \"type\": \"integer\"}, \"convergence_factor\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}}}";
	std::string SAPHRON::JsonSchema::Simulation = "{\"required\": [\"simtype\", \"iterations\"], \"type\": \"object\", \"properties\": {\"simtype\": {\"type\": \"string\", \"enum\": [\"standard\", \"DOS\"]}, \"units\": {\"type\": \"string\", \"enum\": [\"real\", \"reduced\"]}, \"iterations\": {\"minimum\": 1, \"type\": \"integer\"}, \"mpi\": {\"minimum\": 1, \"type\": \"integer\"}}}";
	std::string SAPHRON::JsonSchema::ForceFields = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"bonded\": {\"type\": \"array\"}, \"nonbonded\": {\"type\": \"array\"}, \"electrostatic\": {\"type\": \"array\"}}}";
	std::string SAPHRON::JsonSchema::FENEFF = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"kspring\": {\"minimum\": 0, \"type\": \"number\"}, \"sigma\": {\"minimum\": 0, \"type\": \"number\"}, \"species\": {\"minItems\": 2, \"maxItems\": 2, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"epsilon\": {\"type\": \"number\"}, \"rmax\": {\"minimum\": 0, \"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"FENE\"]}}, \"required\": [\"type\", \"epsilon\", \"sigma\", \"kspring\", \"rmax\", \"species\"]}";
	std::string SAPHRON::JsonSchema::DebyeHuckelFF = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"kappa\": {\"minimum\": 0, \"type\": \"number\"}, \"species\": {\"minItems\": 2, \"maxItems\": 2, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"type\": {\"type\": \"string\", \"enum\": [\"DebyeHuckel\"]}, \"rcut\": {\"minItems\": 1, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}}}, \"required\": [\"type\", \"kappa\", \"species\", \"rcut\"]}";
	std::string SAPHRON::JsonSchema::DSFFF = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"alpha\": {\"minimum\": 0, \"type\": \"number\"}, \"species\": {\"minItems\": 2, \"maxItems\": 2, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"type\": {\"type\": \"string\", \"enum\": [\"DSF\"]}, \"rcut\": {\"minItems\": 1, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}}}, \"required\": [\"type\", \"alpha\", \"species\", \"rcut\"]}";
	std::string SAPHRON::JsonSchema::LebwholLasherFF = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"epsilon\": {\"type\": \"number\"}, \"species\": {\"minItems\": 2, \"maxItems\": 2, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"gamma\": {\"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"LebwohlLasher\"]}}, \"required\": [\"type\", \"epsilon\", \"gamma\", \"species\"]}";
	std::string SAPHRON::JsonSchema::LennardJonesTSFF = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"epsilon\": {\"minimum\": 0, \"type\": \"number\"}, \"rcut\": {\"minItems\": 1, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}}, \"sigma\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"type\": {\"type\": \"string\", \"enum\": [\"LennardJonesTS\"]}, \"species\": {\"minItems\": 2, \"maxItems\": 2, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"type\", \"sigma\", \"epsilon\", \"species\", \"rcut\"]}";
	std::string SAPHRON::JsonSchema::LennardJonesFF = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"epsilon\": {\"minimum\": 0, \"type\": \"number\"}, \"rcut\": {\"minItems\": 1, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}}, \"sigma\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"type\": {\"type\": \"string\", \"enum\": [\"LennardJones\"]}, \"species\": {\"minItems\": 2, \"maxItems\": 2, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"type\", \"sigma\", \"epsilon\", \"species\", \"rcut\"]}";
	std::string SAPHRON::JsonSchema::Components = "{\"minItems\": 1, \"type\": \"array\", \"items\": {\"minItems\": 2, \"maxItems\": 2, \"type\": \"array\", \"items\": [{\"type\": \"string\"}, {\"minimum\": 1, \"type\": \"integer\"}]}}";
	std::string SAPHRON::JsonSchema::Worlds = "{\"minItems\": 1, \"type\": \"array\", \"items\": {\"required\": [\"type\", \"dimensions\", \"nlist_cutoff\", \"skin_thickness\", \"components\"], \"type\": \"object\", \"properties\": {\"dimensions\": {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\"}}, \"nlist_cutoff\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"skin_thickness\": {\"minimum\": 0, \"type\": \"number\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"chemical_potential\": {\"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"number\"}}, \"type\": \"object\"}, \"temperature\": {\"minimum\": 0, \"type\": \"number\"}, \"pack\": {\"type\": \"object\", \"properties\": {\"density\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"composition\": {\"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"minimum\": 0.0, \"type\": \"number\", \"exclusiveMinimum\": true, \"maximum\": 1.0}}, \"type\": \"object\"}, \"count\": {\"minimum\": 1, \"type\": \"integer\"}}}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"particles\": {\"type\": \"array\"}, \"components\": {\"minItems\": 1, \"type\": \"array\", \"items\": {\"minItems\": 2, \"maxItems\": 2, \"type\": \"array\", \"items\": [{\"type\": \"string\"}, {\"minimum\": 1, \"type\": \"integer\"}]}}}, \"additionalProperties\": false}}";
	std::string SAPHRON::JsonSchema::SimpleWorld = "{\"required\": [\"type\", \"dimensions\", \"nlist_cutoff\", \"skin_thickness\", \"components\"], \"type\": \"object\", \"properties\": {\"dimensions\": {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\"}}, \"nlist_cutoff\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"skin_thickness\": {\"minimum\": 0, \"type\": \"number\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"chemical_potential\": {\"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"number\"}}, \"type\": \"object\"}, \"temperature\": {\"minimum\": 0, \"type\": \"number\"}, \"pack\": {\"type\": \"object\", \"properties\": {\"density\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"composition\": {\"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"minimum\": 0.0, \"type\": \"number\", \"exclusiveMinimum\": true, \"maximum\": 1.0}}, \"type\": \"object\"}, \"count\": {\"minimum\": 1, \"type\": \"integer\"}}}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"particles\": {\"type\": \"array\"}, \"components\": {\"minItems\": 1, \"type\": \"array\", \"items\": {\"minItems\": 2, \"maxItems\": 2, \"type\": \"array\", \"items\": [{\"type\": \"string\"}, {\"minimum\": 1, \"type\": \"integer\"}]}}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Particles = "{\"minItems\": 1, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"minItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": [{\"minimum\": 1, \"type\": \"integer\"}, {\"type\": \"string\"}, {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\"}}, {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"number\"}}, {\"type\": \"string\"}], \"maxItems\": 4}}";
	std::string SAPHRON::JsonSchema::Site = "{\"minItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": [{\"minimum\": 1, \"type\": \"integer\"}, {\"type\": \"string\"}, {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\"}}, {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"number\"}}, {\"type\": \"string\"}], \"maxItems\": 4}";
	std::string SAPHRON::JsonSchema::Blueprints = "{\"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"children\": {\"minItems\": 1, \"type\": \"array\", \"items\": {\"required\": [\"species\"], \"type\": \"object\", \"properties\": {\"species\": {\"type\": \"string\"}, \"charge\": {\"type\": \"number\"}, \"mass\": {\"minimum\": 0, \"type\": \"number\"}}}}, \"charge\": {\"type\": \"number\"}, \"bonds\": {\"type\": \"array\", \"items\": {\"minItems\": 2, \"maxItems\": 2, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\"}}}, \"mass\": {\"minimum\": 0, \"type\": \"number\"}}, \"minProperties\": 1}}, \"type\": \"object\", \"additionalProperties\": false, \"minProperties\": 1}";
	std::string SAPHRON::JsonSchema::Selector = "{}";
	std::string SAPHRON::JsonSchema::Director = "{\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"number\"}}";
	std::string SAPHRON::JsonSchema::Observers = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::XYZObserver = "{\"required\": [\"type\", \"prefix\", \"frequency\"], \"properties\": {\"frequency\": {\"minimum\": 1, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"XYZ\"]}, \"prefix\": {\"type\": \"string\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::JSONObserver = "{\"required\": [\"type\", \"prefix\", \"frequency\"], \"properties\": {\"frequency\": {\"minimum\": 1, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"JSON\"]}, \"prefix\": {\"type\": \"string\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::DLMFileObserver = "{\"required\": [\"type\", \"prefix\", \"frequency\", \"flags\"], \"properties\": {\"frequency\": {\"minimum\": 1, \"type\": \"integer\"}, \"extension\": {\"type\": \"string\"}, \"fixedwmode\": {\"type\": \"boolean\"}, \"flags\": {\"type\": \"object\", \"properties\": {\"world_density\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_neighbors\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_id\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"dos_factor\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_pyy\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"hist_counts\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"hist_upper_outliers\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"dos_flatness\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_temperature\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_pzz\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_energy\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"energy_intraelect\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_pyz\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_tensor\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_position\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_parent_species\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_ideal\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_pressure\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"energy_intravdw\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"hist_lower_outliers\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_pxy\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"energy_connectivity\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_pxx\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"hist_values\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_director\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_species\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_composition\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_species_id\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_volume\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"simulation\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_tail\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"histogram\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"move_acceptances\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_pxz\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"iteration\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"energy_bonded\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_parent_id\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_chem_pot\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"hist_interval\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"energy_intervdw\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"hist_bin_count\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"energy_components\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"energy_interelect\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}}}, \"delimiter\": {\"type\": \"string\"}, \"colwidth\": {\"minimum\": 1, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"DLMFile\"]}, \"prefix\": {\"type\": \"string\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::AnnealChargeMove = "{\"required\": [\"type\", \"species\"], \"type\": \"object\", \"properties\": {\"species\": {\"minItems\": 1, \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"AnnealCharge\"]}, \"explicit_draw\": {\"type\": \"boolean\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::AcidTitrationMove = "{\"required\": [\"type\", \"species\"], \"type\": \"object\", \"properties\": {\"species\": {\"minItems\": 1, \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"AnnealCharge\"]}, \"explicit_draw\": {\"type\": \"boolean\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::DeleteParticleMove = "{\"required\": [\"type\", \"species\"], \"type\": \"object\", \"properties\": {\"species\": {\"minimumItems\": 1, \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"DeleteParticle\"]}, \"op_prefactor\": {\"tyoe\": \"boolean\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::InsertParticleMove = "{\"required\": [\"type\", \"stash_count\", \"species\"], \"type\": \"object\", \"properties\": {\"species\": {\"minimumItems\": 1, \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"op_prefactor\": {\"tyoe\": \"boolean\"}, \"stash_count\": {\"minimum\": 1, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"InsertParticle\"]}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::VolumeSwapMove = "{\"required\": [\"type\", \"dv\"], \"type\": \"object\", \"properties\": {\"dv\": {\"minimum\": 0, \"type\": \"number\"}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"VolumeSwap\"]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::RotateMove = "{\"required\": [\"type\", \"maxangle\"], \"type\": \"object\", \"properties\": {\"maxangle\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true, \"maximum\": 6.283185307179586}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"Rotate\"]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::TranslateMove = "{\"required\": [\"type\", \"dx\"], \"type\": \"object\", \"properties\": {\"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"dx\": {\"oneOf\": [{\"minimum\": 0, \"type\": \"number\"}, {\"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"number\", \"minimum\": 0.0, \"exclusiveMinimum\": true}}, \"type\": \"object\", \"minProperties\": 1}]}, \"type\": {\"type\": \"string\", \"enum\": [\"Translate\"]}, \"explicit_draw\": {\"type\": \"boolean\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::DirectorRotateMove = "{\"required\": [\"type\"], \"type\": \"object\", \"properties\": {\"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"DirectorRotate\"]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::SpeciesSwapMove = "{\"required\": [\"type\"], \"type\": \"object\", \"properties\": {\"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"SpeciesSwap\"]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::ParticleSwapMove = "{\"required\": [\"type\"], \"type\": \"object\", \"properties\": {\"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"ParticleSwap\"]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Moves = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::RandomIdentityMove = "{\"required\": [\"type\", \"identities\"], \"type\": \"object\", \"properties\": {\"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"RandomIdentity\"]}, \"identities\": {\"uniqueItems\": true, \"type\": \"array\", \"items\": {\"type\": \"string\"}, \"minIems\": 1}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::FlipSpinMove = "{\"required\": [\"type\"], \"type\": \"object\", \"properties\": {\"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"FlipSpin\"]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::P2SAConnectivity = "{\"required\": [\"type\", \"coefficient\", \"director\", \"selector\"], \"type\": \"object\", \"properties\": {\"coefficient\": {\"type\": \"number\"}, \"director\": {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"number\"}}, \"selector\": {}, \"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Connectivities = "{\"type\": \"array\", \"items\": {\"oneOf\": [{\"required\": [\"type\", \"coefficient\", \"director\", \"selector\"], \"type\": \"object\", \"properties\": {\"coefficient\": {\"type\": \"number\"}, \"director\": {\"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"number\"}}, \"selector\": {}, \"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}}, \"additionalProperties\": false}]}}";
	
}
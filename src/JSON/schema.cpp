#include "schema.h"

namespace SAPHRON
{
	//INSERT_DEF_HERE
	std::string SAPHRON::JsonSchema::ElasticCoeffOP = "{\"properties\": {\"world\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"ElasticCoeff\"]}, \"xrange\": {\"items\": {\"type\": \"number\"}, \"minItems\": 2, \"maxItems\": 2, \"type\": \"array\"}, \"mode\": {\"type\": \"string\", \"enum\": [\"twist\"]}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"mode\", \"xrange\", \"world\"]}";
	std::string SAPHRON::JsonSchema::WangLandauOP = "{\"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"WangLandau\"]}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::Histogram = "{\"properties\": {\"bincount\": {\"type\": \"integer\", \"minimum\": 1}, \"binwidth\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"max\": {\"type\": \"number\"}, \"counts\": {\"items\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": \"array\"}, \"min\": {\"type\": \"number\"}, \"values\": {\"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"min\", \"max\"]}";
	std::string SAPHRON::JsonSchema::DOSSimulation = "{\"properties\": {\"reset_freq\": {\"type\": \"integer\", \"minimum\": 0}, \"target_flatness\": {\"exclusiveMinimum\": true, \"exclusiveMaximum\": true, \"type\": \"number\", \"minimum\": 0, \"maximum\": 1}, \"convergence_factor\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}}, \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Simulation = "{\"properties\": {\"units\": {\"type\": \"string\", \"enum\": [\"real\", \"reduced\"]}, \"mpi\": {\"type\": \"integer\", \"minimum\": 1}, \"iterations\": {\"type\": \"integer\", \"minimum\": 1}, \"simtype\": {\"type\": \"string\", \"enum\": [\"standard\", \"DOS\"]}}, \"type\": \"object\", \"required\": [\"simtype\", \"iterations\"]}";
	std::string SAPHRON::JsonSchema::ForceFields = "{\"properties\": {\"electrostatic\": {\"type\": \"array\"}, \"bonded\": {\"type\": \"array\"}, \"nonbonded\": {\"type\": \"array\"}}, \"type\": \"object\", \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::DebyeHuckelFF = "{\"properties\": {\"kappa\": {\"type\": \"number\", \"minimum\": 0}, \"species\": {\"items\": {\"type\": \"string\"}, \"minItems\": 2, \"maxItems\": 2, \"type\": \"array\", \"additionalItems\": false}, \"type\": {\"type\": \"string\", \"enum\": [\"DebyeHuckel\"]}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"kappa\", \"species\"]}";
	std::string SAPHRON::JsonSchema::DSFFF = "{\"properties\": {\"species\": {\"items\": {\"type\": \"string\"}, \"minItems\": 2, \"maxItems\": 2, \"type\": \"array\", \"additionalItems\": false}, \"type\": {\"type\": \"string\", \"enum\": [\"DSF\"]}, \"alpha\": {\"type\": \"number\", \"minimum\": 0}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"alpha\", \"species\"]}";
	std::string SAPHRON::JsonSchema::LebwholLasherFF = "{\"properties\": {\"gamma\": {\"type\": \"number\"}, \"species\": {\"items\": {\"type\": \"string\"}, \"minItems\": 2, \"maxItems\": 2, \"type\": \"array\", \"additionalItems\": false}, \"type\": {\"type\": \"string\", \"enum\": [\"LebwohlLasher\"]}, \"epsilon\": {\"type\": \"number\"}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"epsilon\", \"gamma\", \"species\"]}";
	std::string SAPHRON::JsonSchema::LennardJonesFF = "{\"properties\": {\"sigma\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"species\": {\"items\": {\"type\": \"string\"}, \"minItems\": 2, \"maxItems\": 2, \"type\": \"array\", \"additionalItems\": false}, \"type\": {\"type\": \"string\", \"enum\": [\"LennardJones\"]}, \"epsilon\": {\"type\": \"number\", \"minimum\": 0}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"sigma\", \"epsilon\", \"species\"]}";
	std::string SAPHRON::JsonSchema::Worlds = "{\"items\": {\"properties\": {\"temperature\": {\"type\": \"number\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"dimensions\": {\"items\": {\"type\": \"number\", \"minimum\": 0}, \"minItems\": 3, \"maxItems\": 3, \"type\": \"array\", \"additionalItems\": false}, \"components\": {\"type\": \"object\"}, \"r_cutoff\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"nlist_cutoff\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"particles\": {\"type\": \"array\"}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"dimensions\", \"r_cutoff\", \"components\"]}, \"minItems\": 1, \"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::SimpleWorld = "{\"properties\": {\"temperature\": {\"type\": \"number\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"dimensions\": {\"items\": {\"type\": \"number\", \"minimum\": 0}, \"minItems\": 3, \"maxItems\": 3, \"type\": \"array\", \"additionalItems\": false}, \"components\": {\"type\": \"object\"}, \"r_cutoff\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"nlist_cutoff\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0}, \"particles\": {\"type\": \"array\"}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"dimensions\", \"r_cutoff\", \"components\"]}";
	std::string SAPHRON::JsonSchema::Particles = "{\"items\": {\"items\": [{\"type\": \"integer\", \"minimum\": 1}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"items\": {\"type\": \"number\", \"minimum\": 0}, \"minItems\": 3, \"maxItems\": 3, \"type\": \"array\", \"additionalItems\": false}, {\"items\": {\"type\": \"number\"}, \"minItems\": 3, \"maxItems\": 3, \"type\": \"array\", \"additionalItems\": false}, {\"type\": \"string\"}], \"minItems\": 4, \"type\": \"array\", \"additionalItems\": false}, \"minItems\": 1, \"type\": \"array\", \"additionalItems\": false}";
	std::string SAPHRON::JsonSchema::Site = "{\"items\": [{\"type\": \"integer\", \"minimum\": 1}, {\"type\": \"string\"}, {\"type\": \"string\"}, {\"items\": {\"type\": \"number\", \"minimum\": 0}, \"minItems\": 3, \"maxItems\": 3, \"type\": \"array\", \"additionalItems\": false}, {\"items\": {\"type\": \"number\"}, \"minItems\": 3, \"maxItems\": 3, \"type\": \"array\", \"additionalItems\": false}, {\"type\": \"string\"}], \"minItems\": 4, \"type\": \"array\", \"additionalItems\": false}";
	std::string SAPHRON::JsonSchema::Components = "{\"minProperties\": 1, \"type\": \"object\", \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"minProperties\": 1, \"properties\": {\"species\": {\"type\": \"string\"}, \"children\": {\"items\": {\"properties\": {\"charge\": {\"type\": \"number\"}, \"species\": {\"type\": \"string\"}, \"mass\": {\"type\": \"number\", \"minimum\": 0}}, \"type\": \"object\", \"required\": [\"species\"]}, \"minItems\": 1, \"type\": \"array\"}, \"charge\": {\"type\": \"number\"}, \"mass\": {\"type\": \"number\", \"minimum\": 0}, \"count\": {\"type\": \"integer\", \"minimum\": 1}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"count\"]}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Selector = "{}";
	std::string SAPHRON::JsonSchema::Director = "{\"items\": {\"type\": \"number\"}, \"minItems\": 3, \"maxItems\": 3, \"type\": \"array\", \"additionalItems\": false}";
	std::string SAPHRON::JsonSchema::Observers = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::JSONObserver = "{\"properties\": {\"frequency\": {\"type\": \"integer\", \"minimum\": 1}, \"type\": {\"type\": \"string\", \"enum\": [\"JSON\"]}, \"prefix\": {\"type\": \"string\"}}, \"additionalProperties\": false, \"required\": [\"type\", \"prefix\", \"frequency\"]}";
	std::string SAPHRON::JsonSchema::DLMFileObserver = "{\"properties\": {\"extension\": {\"type\": \"string\"}, \"fixedwmode\": {\"type\": \"boolean\"}, \"type\": {\"type\": \"string\", \"enum\": [\"DLMFile\"]}, \"prefix\": {\"type\": \"string\"}, \"frequency\": {\"type\": \"integer\", \"minimum\": 1}, \"delimiter\": {\"type\": \"string\"}, \"flags\": {\"properties\": {\"energy_components\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_pxx\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"hist_counts\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"energy_connectivity\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"hist_lower_outliers\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"world_temperature\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"dos_factor\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_tensor\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"hist_interval\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle_id\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_pyz\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"dos_flatness\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"world_pressure\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"world_density\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"energy_intraelect\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_ideal\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"world\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_tail\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle_species\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"move_acceptances\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle_neighbors\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle_parent_species\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"energy_bonded\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"world_energy\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"iteration\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_pzz\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle_position\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"hist_values\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_pxy\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"histogram\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle_director\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"hist_upper_outliers\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"energy_intervdw\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"world_composition\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_pyy\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle_parent_id\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_pxz\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"simulation\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"energy_interelect\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"hist_bin_count\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"world_volume\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"energy_intravdw\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}}, \"type\": \"object\"}, \"colwidth\": {\"type\": \"integer\", \"minimum\": 1}}, \"additionalProperties\": false, \"required\": [\"type\", \"prefix\", \"frequency\", \"flags\"]}";
	std::string SAPHRON::JsonSchema::VolumeSwapMove = "{\"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"dv\": {\"type\": \"number\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"VolumeSwap\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"dv\"]}";
	std::string SAPHRON::JsonSchema::RotateMove = "{\"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"Rotate\"]}, \"maxangle\": {\"exclusiveMinimum\": true, \"type\": \"number\", \"minimum\": 0, \"maximum\": 6.283185307179586}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"maxangle\"]}";
	std::string SAPHRON::JsonSchema::TranslateMove = "{\"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"Translate\"]}, \"dx\": {\"type\": \"number\", \"minimum\": 0}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"dx\"]}";
	std::string SAPHRON::JsonSchema::DirectorRotateMove = "{\"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"type\": {\"type\": \"string\", \"enum\": [\"DirectorRotate\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::SpeciesSwapMove = "{\"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"type\": {\"type\": \"string\", \"enum\": [\"SpeciesSwap\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::ParticleSwapMove = "{\"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"type\": {\"type\": \"string\", \"enum\": [\"ParticleSwap\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::Moves = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::RandomIdentityMove = "{\"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"type\": {\"type\": \"string\", \"enum\": [\"RandomIdentity\"]}, \"identities\": {\"items\": {\"type\": \"string\"}, \"uniqueItems\": true, \"type\": \"array\", \"minIems\": 1}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"identities\"]}";
	std::string SAPHRON::JsonSchema::FlipSpinMove = "{\"properties\": {\"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"type\": {\"type\": \"string\", \"enum\": [\"FlipSpin\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::P2SAConnectivity = "{\"properties\": {\"selector\": {}, \"director\": {\"items\": {\"type\": \"number\"}, \"minItems\": 3, \"maxItems\": 3, \"type\": \"array\", \"additionalItems\": false}, \"coefficient\": {\"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"]}";
	std::string SAPHRON::JsonSchema::Connectivities = "{\"items\": {\"oneOf\": [{\"properties\": {\"selector\": {}, \"director\": {\"items\": {\"type\": \"number\"}, \"minItems\": 3, \"maxItems\": 3, \"type\": \"array\", \"additionalItems\": false}, \"coefficient\": {\"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}}, \"type\": \"object\", \"additionalProperties\": false, \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"]}]}, \"type\": \"array\"}";
	
}
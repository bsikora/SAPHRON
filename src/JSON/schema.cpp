#include "schema.h"

namespace SAPHRON
{
	//INSERT_DEF_HERE
	std::string SAPHRON::JsonSchema::ElasticCoeffOP = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"ElasticCoeff\"]}, \"world\": {\"type\": \"integer\", \"minimum\": 0}, \"xrange\": {\"type\": \"array\", \"maxItems\": 2, \"items\": {\"type\": \"number\"}, \"minItems\": 2}, \"mode\": {\"type\": \"string\", \"enum\": [\"twist\"]}}, \"additionalProperties\": false, \"required\": [\"type\", \"mode\", \"xrange\", \"world\"]}";
	std::string SAPHRON::JsonSchema::WangLandauOP = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"WangLandau\"]}}, \"additionalProperties\": false, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::Histogram = "{\"type\": \"object\", \"properties\": {\"min\": {\"type\": \"number\"}, \"binwidth\": {\"type\": \"number\", \"minimum\": 0, \"exclusiveMinimum\": true}, \"values\": {\"type\": \"array\", \"items\": {\"type\": \"number\"}}, \"max\": {\"type\": \"number\"}, \"bincount\": {\"type\": \"integer\", \"minimum\": 1}, \"counts\": {\"type\": \"array\", \"items\": {\"type\": \"integer\", \"minimum\": 0}}}, \"additionalProperties\": false, \"required\": [\"min\", \"max\"]}";
	std::string SAPHRON::JsonSchema::DOSSimulation = "{\"type\": \"object\", \"properties\": {\"target_flatness\": {\"type\": \"number\", \"minimum\": 0, \"exclusiveMinimum\": true, \"exclusiveMaximum\": true, \"maximum\": 1}, \"reset_freq\": {\"type\": \"integer\", \"minimum\": 0}, \"convergence_factor\": {\"type\": \"number\", \"minimum\": 0, \"exclusiveMinimum\": true}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Simulation = "{\"type\": \"object\", \"properties\": {\"mpi\": {\"type\": \"integer\", \"minimum\": 1}, \"iterations\": {\"type\": \"integer\", \"minimum\": 1}, \"simtype\": {\"type\": \"string\", \"enum\": [\"standard\", \"DOS\"]}, \"units\": {\"type\": \"string\", \"enum\": [\"real\", \"reduced\"]}}, \"required\": [\"simtype\", \"iterations\"]}";
	std::string SAPHRON::JsonSchema::ForceFields = "{\"type\": \"object\", \"properties\": {\"nonbonded\": {\"type\": \"array\"}, \"bonded\": {\"type\": \"array\"}, \"electrostatic\": {\"type\": \"array\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::DebyeHuckelFF = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"DebyeHuckel\"]}, \"species\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"additionalItems\": false, \"maxItems\": 2, \"minItems\": 2}, \"kappa\": {\"type\": \"number\", \"minimum\": 0}}, \"additionalProperties\": false, \"required\": [\"type\", \"kappa\", \"species\"]}";
	std::string SAPHRON::JsonSchema::DSFFF = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"DSF\"]}, \"alpha\": {\"type\": \"number\", \"minimum\": 0}, \"species\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"additionalItems\": false, \"maxItems\": 2, \"minItems\": 2}}, \"additionalProperties\": false, \"required\": [\"type\", \"alpha\", \"species\"]}";
	std::string SAPHRON::JsonSchema::LebwholLasherFF = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"LebwohlLasher\"]}, \"species\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"additionalItems\": false, \"maxItems\": 2, \"minItems\": 2}, \"epsilon\": {\"type\": \"number\"}, \"gamma\": {\"type\": \"number\"}}, \"additionalProperties\": false, \"required\": [\"type\", \"epsilon\", \"gamma\", \"species\"]}";
	std::string SAPHRON::JsonSchema::LennardJonesFF = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"LennardJones\"]}, \"species\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"additionalItems\": false, \"maxItems\": 2, \"minItems\": 2}, \"epsilon\": {\"type\": \"number\", \"minimum\": 0}, \"sigma\": {\"type\": \"number\", \"minimum\": 0, \"exclusiveMinimum\": true}}, \"additionalProperties\": false, \"required\": [\"type\", \"sigma\", \"epsilon\", \"species\"]}";
	std::string SAPHRON::JsonSchema::Components = "{\"components\": {\"type\": \"object\", \"additionalProperties\": false, \"minProperties\": 1, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"object\", \"properties\": {\"count\": {\"type\": \"integer\", \"minimum\": 1}}, \"required\": [\"count\"]}}}}";
	std::string SAPHRON::JsonSchema::Worlds = "{\"type\": \"array\", \"items\": {\"type\": \"object\", \"properties\": {\"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"components\": {\"components\": {\"type\": \"object\", \"additionalProperties\": false, \"minProperties\": 1, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"object\", \"properties\": {\"count\": {\"type\": \"integer\", \"minimum\": 1}}, \"required\": [\"count\"]}}}}, \"particles\": {\"type\": \"array\"}, \"r_cutoff\": {\"type\": \"number\", \"minimum\": 0, \"exclusiveMinimum\": true}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"temperature\": {\"type\": \"number\", \"minimum\": 0}, \"chemical_potential\": {\"type\": \"object\", \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"number\"}}}, \"dimensions\": {\"type\": \"array\", \"items\": {\"type\": \"number\", \"minimum\": 0}, \"additionalItems\": false, \"maxItems\": 3, \"minItems\": 3}, \"pack\": {\"type\": \"object\", \"properties\": {\"count\": {\"type\": \"integer\", \"minimum\": 1}, \"density\": {\"type\": \"number\", \"minimum\": 0, \"exclusiveMinimum\": true}, \"composition\": {\"type\": \"object\", \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"number\", \"minimum\": 0.0, \"exclusiveMinimum\": true, \"maximum\": 1.0}}}}}, \"nlist_cutoff\": {\"type\": \"number\", \"minimum\": 0, \"exclusiveMinimum\": true}}, \"additionalProperties\": false, \"required\": [\"type\", \"dimensions\", \"r_cutoff\", \"components\"]}, \"minItems\": 1}";
	std::string SAPHRON::JsonSchema::SimpleWorld = "{\"type\": \"object\", \"properties\": {\"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"components\": {\"components\": {\"type\": \"object\", \"additionalProperties\": false, \"minProperties\": 1, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"object\", \"properties\": {\"count\": {\"type\": \"integer\", \"minimum\": 1}}, \"required\": [\"count\"]}}}}, \"particles\": {\"type\": \"array\"}, \"r_cutoff\": {\"type\": \"number\", \"minimum\": 0, \"exclusiveMinimum\": true}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"temperature\": {\"type\": \"number\", \"minimum\": 0}, \"chemical_potential\": {\"type\": \"object\", \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"number\"}}}, \"dimensions\": {\"type\": \"array\", \"items\": {\"type\": \"number\", \"minimum\": 0}, \"additionalItems\": false, \"maxItems\": 3, \"minItems\": 3}, \"pack\": {\"type\": \"object\", \"properties\": {\"count\": {\"type\": \"integer\", \"minimum\": 1}, \"density\": {\"type\": \"number\", \"minimum\": 0, \"exclusiveMinimum\": true}, \"composition\": {\"type\": \"object\", \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"number\", \"minimum\": 0.0, \"exclusiveMinimum\": true, \"maximum\": 1.0}}}}}, \"nlist_cutoff\": {\"type\": \"number\", \"minimum\": 0, \"exclusiveMinimum\": true}}, \"additionalProperties\": false, \"required\": [\"type\", \"dimensions\", \"r_cutoff\", \"components\"]}";
	std::string SAPHRON::JsonSchema::Particles = "{\"type\": \"array\", \"additionalItems\": false, \"items\": {\"type\": \"array\", \"maxItems\": 4, \"additionalItems\": false, \"items\": [{\"type\": \"integer\", \"minimum\": 1}, {\"type\": \"string\"}, {\"type\": \"array\", \"items\": {\"type\": \"number\", \"minimum\": 0}, \"additionalItems\": false, \"maxItems\": 3, \"minItems\": 3}, {\"type\": \"array\", \"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"maxItems\": 3, \"minItems\": 3}, {\"type\": \"string\"}], \"minItems\": 3}, \"minItems\": 1}";
	std::string SAPHRON::JsonSchema::Site = "{\"type\": \"array\", \"maxItems\": 4, \"additionalItems\": false, \"items\": [{\"type\": \"integer\", \"minimum\": 1}, {\"type\": \"string\"}, {\"type\": \"array\", \"items\": {\"type\": \"number\", \"minimum\": 0}, \"additionalItems\": false, \"maxItems\": 3, \"minItems\": 3}, {\"type\": \"array\", \"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"maxItems\": 3, \"minItems\": 3}, {\"type\": \"string\"}], \"minItems\": 3}";
	std::string SAPHRON::JsonSchema::Blueprints = "{\"type\": \"object\", \"additionalProperties\": false, \"minProperties\": 1, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"object\", \"properties\": {\"children\": {\"type\": \"array\", \"items\": {\"type\": \"object\", \"properties\": {\"species\": {\"type\": \"string\"}, \"mass\": {\"type\": \"number\", \"minimum\": 0}, \"charge\": {\"type\": \"number\"}}, \"required\": [\"species\"]}, \"minItems\": 1}, \"count\": {\"type\": \"integer\", \"minimum\": 1}, \"mass\": {\"type\": \"number\", \"minimum\": 0}, \"charge\": {\"type\": \"number\"}}, \"additionalProperties\": false, \"minProperties\": 1, \"required\": [\"count\"]}}}";
	std::string SAPHRON::JsonSchema::Selector = "{}";
	std::string SAPHRON::JsonSchema::Director = "{\"type\": \"array\", \"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"maxItems\": 3, \"minItems\": 3}";
	std::string SAPHRON::JsonSchema::Observers = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::JSONObserver = "{\"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"JSON\"]}, \"frequency\": {\"type\": \"integer\", \"minimum\": 1}, \"prefix\": {\"type\": \"string\"}}, \"additionalProperties\": false, \"required\": [\"type\", \"prefix\", \"frequency\"]}";
	std::string SAPHRON::JsonSchema::DLMFileObserver = "{\"properties\": {\"colwidth\": {\"type\": \"integer\", \"minimum\": 1}, \"extension\": {\"type\": \"string\"}, \"flags\": {\"type\": \"object\", \"properties\": {\"pressure_pxy\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"energy_connectivity\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"simulation\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"hist_values\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle_species\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_pyz\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_ideal\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"energy_components\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"world_energy\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"world\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_pzz\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"world_temperature\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle_parent_id\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"iteration\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"move_acceptances\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"energy_interelect\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_tail\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle_id\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle_position\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"world_volume\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_pyy\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle_director\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"world_pressure\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"energy_bonded\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"hist_counts\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"dos_flatness\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"histogram\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"hist_upper_outliers\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"hist_interval\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_pxx\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"hist_bin_count\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"dos_factor\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"world_density\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle_parent_species\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_tensor\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"world_composition\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"energy_intervdw\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"hist_lower_outliers\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"pressure_pxz\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"energy_intraelect\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"particle_neighbors\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}, \"energy_intravdw\": {\"type\": \"integer\", \"minimum\": 0, \"maximum\": 1}}}, \"fixedwmode\": {\"type\": \"boolean\"}, \"type\": {\"type\": \"string\", \"enum\": [\"DLMFile\"]}, \"delimiter\": {\"type\": \"string\"}, \"frequency\": {\"type\": \"integer\", \"minimum\": 1}, \"prefix\": {\"type\": \"string\"}}, \"additionalProperties\": false, \"required\": [\"type\", \"prefix\", \"frequency\", \"flags\"]}";
	std::string SAPHRON::JsonSchema::DeleteParticleMove = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"DeleteParticle\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"species\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"minimumItems\": 1}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}}, \"additionalProperties\": false, \"required\": [\"type\", \"species\"]}";
	std::string SAPHRON::JsonSchema::InsertParticleMove = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"InsertParticle\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"stash_count\": {\"type\": \"integer\", \"minimum\": 1}, \"species\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"minimumItems\": 1}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}}, \"additionalProperties\": false, \"required\": [\"type\", \"stash_count\", \"species\"]}";
	std::string SAPHRON::JsonSchema::VolumeSwapMove = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"VolumeSwap\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"dv\": {\"type\": \"number\", \"minimum\": 0}}, \"additionalProperties\": false, \"required\": [\"type\", \"dv\"]}";
	std::string SAPHRON::JsonSchema::RotateMove = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"Rotate\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"maxangle\": {\"type\": \"number\", \"minimum\": 0, \"exclusiveMinimum\": true, \"maximum\": 6.283185307179586}}, \"additionalProperties\": false, \"required\": [\"type\", \"maxangle\"]}";
	std::string SAPHRON::JsonSchema::TranslateMove = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"Translate\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"dx\": {\"type\": \"number\", \"minimum\": 0}}, \"additionalProperties\": false, \"required\": [\"type\", \"dx\"]}";
	std::string SAPHRON::JsonSchema::DirectorRotateMove = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"DirectorRotate\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}}, \"additionalProperties\": false, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::SpeciesSwapMove = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"SpeciesSwap\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}}, \"additionalProperties\": false, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::ParticleSwapMove = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"ParticleSwap\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}}, \"additionalProperties\": false, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::Moves = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::RandomIdentityMove = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"RandomIdentity\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"identities\": {\"type\": \"array\", \"minIems\": 1, \"uniqueItems\": true, \"items\": {\"type\": \"string\"}}}, \"additionalProperties\": false, \"required\": [\"type\", \"identities\"]}";
	std::string SAPHRON::JsonSchema::FlipSpinMove = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"FlipSpin\"]}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}}, \"additionalProperties\": false, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::P2SAConnectivity = "{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"coefficient\": {\"type\": \"number\"}, \"selector\": {}, \"director\": {\"type\": \"array\", \"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"maxItems\": 3, \"minItems\": 3}}, \"additionalProperties\": false, \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"]}";
	std::string SAPHRON::JsonSchema::Connectivities = "{\"type\": \"array\", \"items\": {\"oneOf\": [{\"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"coefficient\": {\"type\": \"number\"}, \"selector\": {}, \"director\": {\"type\": \"array\", \"items\": {\"type\": \"number\"}, \"additionalItems\": false, \"maxItems\": 3, \"minItems\": 3}}, \"additionalProperties\": false, \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"]}]}}";
	
}
#include "schema.h"

namespace SAPHRON
{
	//INSERT_DEF_HERE
	std::string SAPHRON::JsonSchema::ElasticCoeffOP = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"ElasticCoeff\"]}, \"mode\": {\"type\": \"string\", \"enum\": [\"twist\"]}, \"world\": {\"type\": \"integer\", \"minimum\": 0}, \"xrange\": {\"maxItems\": 2, \"type\": \"array\", \"minItems\": 2, \"items\": {\"type\": \"number\"}}}, \"required\": [\"type\", \"mode\", \"xrange\", \"world\"]}";
	std::string SAPHRON::JsonSchema::WangLandauOP = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"WangLandau\"]}}, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::Histogram = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"counts\": {\"type\": \"array\", \"items\": {\"type\": \"integer\", \"minimum\": 0}}, \"min\": {\"type\": \"number\"}, \"binwidth\": {\"type\": \"number\", \"exclusiveMinimum\": true, \"minimum\": 0}, \"values\": {\"type\": \"array\", \"items\": {\"type\": \"number\"}}, \"max\": {\"type\": \"number\"}, \"bincount\": {\"type\": \"integer\", \"minimum\": 1}}, \"required\": [\"min\", \"max\"]}";
	std::string SAPHRON::JsonSchema::DOSSimulation = "{\"type\": \"object\", \"properties\": {\"target_flatness\": {\"type\": \"number\", \"exclusiveMinimum\": true, \"maximum\": 1, \"minimum\": 0, \"exclusiveMaximum\": true}, \"convergence_factor\": {\"type\": \"number\", \"exclusiveMinimum\": true, \"minimum\": 0}, \"reset_freq\": {\"type\": \"integer\", \"minimum\": 0}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Simulation = "{\"type\": \"object\", \"properties\": {\"units\": {\"type\": \"string\", \"enum\": [\"real\", \"reduced\"]}, \"mpi\": {\"type\": \"integer\", \"minimum\": 1}, \"iterations\": {\"type\": \"integer\", \"minimum\": 1}, \"simtype\": {\"type\": \"string\", \"enum\": [\"standard\", \"DOS\"]}}, \"required\": [\"simtype\", \"iterations\"]}";
	std::string SAPHRON::JsonSchema::ForceFields = "{\"type\": \"object\", \"properties\": {\"bonded\": {\"type\": \"array\"}, \"nonbonded\": {\"type\": \"array\"}, \"electrostatic\": {\"type\": \"array\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::DebyeHuckelFF = "{\"type\": \"object\", \"required\": [\"type\", \"kappa\", \"species\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"DebyeHuckel\"]}, \"species\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"minItems\": 2, \"maxItems\": 2, \"additionalItems\": false}, \"kappa\": {\"type\": \"number\", \"minimum\": 0}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::DSFFF = "{\"type\": \"object\", \"required\": [\"type\", \"alpha\", \"species\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"DSF\"]}, \"species\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"minItems\": 2, \"maxItems\": 2, \"additionalItems\": false}, \"alpha\": {\"type\": \"number\", \"minimum\": 0}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::LebwholLasherFF = "{\"type\": \"object\", \"required\": [\"type\", \"epsilon\", \"gamma\", \"species\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"LebwohlLasher\"]}, \"species\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"minItems\": 2, \"maxItems\": 2, \"additionalItems\": false}, \"epsilon\": {\"type\": \"number\"}, \"gamma\": {\"type\": \"number\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::LennardJonesFF = "{\"type\": \"object\", \"required\": [\"type\", \"sigma\", \"epsilon\", \"species\"], \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"LennardJones\"]}, \"species\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"minItems\": 2, \"maxItems\": 2, \"additionalItems\": false}, \"epsilon\": {\"type\": \"number\", \"minimum\": 0}, \"sigma\": {\"type\": \"number\", \"exclusiveMinimum\": true, \"minimum\": 0}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::Components = "{\"components\": {\"type\": \"object\", \"additionalProperties\": false, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"object\", \"properties\": {\"count\": {\"type\": \"integer\", \"minimum\": 1}}, \"required\": [\"count\"]}}, \"minProperties\": 1}}";
	std::string SAPHRON::JsonSchema::Worlds = "{\"type\": \"array\", \"minItems\": 1, \"items\": {\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"particles\": {\"type\": \"array\"}, \"pack\": {\"type\": \"object\"}, \"components\": {\"components\": {\"type\": \"object\", \"additionalProperties\": false, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"object\", \"properties\": {\"count\": {\"type\": \"integer\", \"minimum\": 1}}, \"required\": [\"count\"]}}, \"minProperties\": 1}}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"dimensions\": {\"type\": \"array\", \"items\": {\"type\": \"number\", \"minimum\": 0}, \"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"temperature\": {\"type\": \"number\", \"minimum\": 0}, \"nlist_cutoff\": {\"type\": \"number\", \"exclusiveMinimum\": true, \"minimum\": 0}, \"r_cutoff\": {\"type\": \"number\", \"exclusiveMinimum\": true, \"minimum\": 0}}, \"required\": [\"type\", \"dimensions\", \"r_cutoff\", \"components\"]}}";
	std::string SAPHRON::JsonSchema::SimpleWorld = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"particles\": {\"type\": \"array\"}, \"pack\": {\"type\": \"object\"}, \"components\": {\"components\": {\"type\": \"object\", \"additionalProperties\": false, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"object\", \"properties\": {\"count\": {\"type\": \"integer\", \"minimum\": 1}}, \"required\": [\"count\"]}}, \"minProperties\": 1}}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"dimensions\": {\"type\": \"array\", \"items\": {\"type\": \"number\", \"minimum\": 0}, \"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"temperature\": {\"type\": \"number\", \"minimum\": 0}, \"nlist_cutoff\": {\"type\": \"number\", \"exclusiveMinimum\": true, \"minimum\": 0}, \"r_cutoff\": {\"type\": \"number\", \"exclusiveMinimum\": true, \"minimum\": 0}}, \"required\": [\"type\", \"dimensions\", \"r_cutoff\", \"components\"]}";
	std::string SAPHRON::JsonSchema::Particles = "{\"type\": \"array\", \"minItems\": 1, \"items\": {\"maxItems\": 4, \"type\": \"array\", \"minItems\": 3, \"items\": [{\"type\": \"integer\", \"minimum\": 1}, {\"type\": \"string\"}, {\"type\": \"array\", \"items\": {\"type\": \"number\", \"minimum\": 0}, \"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false}, {\"type\": \"array\", \"items\": {\"type\": \"number\"}, \"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false}, {\"type\": \"string\"}], \"additionalItems\": false}, \"additionalItems\": false}";
	std::string SAPHRON::JsonSchema::Site = "{\"maxItems\": 4, \"type\": \"array\", \"minItems\": 3, \"items\": [{\"type\": \"integer\", \"minimum\": 1}, {\"type\": \"string\"}, {\"type\": \"array\", \"items\": {\"type\": \"number\", \"minimum\": 0}, \"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false}, {\"type\": \"array\", \"items\": {\"type\": \"number\"}, \"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false}, {\"type\": \"string\"}], \"additionalItems\": false}";
	std::string SAPHRON::JsonSchema::Blueprints = "{\"type\": \"object\", \"additionalProperties\": false, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"object\", \"minProperties\": 1, \"properties\": {\"children\": {\"type\": \"array\", \"minItems\": 1, \"items\": {\"type\": \"object\", \"properties\": {\"charge\": {\"type\": \"number\"}, \"mass\": {\"type\": \"number\", \"minimum\": 0}, \"species\": {\"type\": \"string\"}}, \"required\": [\"species\"]}}, \"charge\": {\"type\": \"number\"}, \"count\": {\"type\": \"integer\", \"minimum\": 1}, \"mass\": {\"type\": \"number\", \"minimum\": 0}}, \"additionalProperties\": false, \"required\": [\"count\"]}}, \"minProperties\": 1}";
	std::string SAPHRON::JsonSchema::Selector = "{}";
	std::string SAPHRON::JsonSchema::Director = "{\"type\": \"array\", \"items\": {\"type\": \"number\"}, \"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false}";
	std::string SAPHRON::JsonSchema::Observers = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::JSONObserver = "{\"required\": [\"type\", \"prefix\", \"frequency\"], \"properties\": {\"prefix\": {\"type\": \"string\"}, \"type\": {\"type\": \"string\", \"enum\": [\"JSON\"]}, \"frequency\": {\"type\": \"integer\", \"minimum\": 1}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::DLMFileObserver = "{\"required\": [\"type\", \"prefix\", \"frequency\", \"flags\"], \"properties\": {\"prefix\": {\"type\": \"string\"}, \"frequency\": {\"type\": \"integer\", \"minimum\": 1}, \"fixedwmode\": {\"type\": \"boolean\"}, \"flags\": {\"type\": \"object\", \"properties\": {\"particle_species\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"particle_position\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_temperature\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"iteration\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"particle\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"hist_counts\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"particle_neighbors\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_pressure\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"hist_lower_outliers\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"move_acceptances\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_tail\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"energy_bonded\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_tensor\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_energy\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_volume\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_pxx\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_density\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_pzz\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"energy_interelect\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"energy_connectivity\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"energy_components\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"hist_interval\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_pxz\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_ideal\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_pxy\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_pyz\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"hist_values\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"particle_parent_id\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"dos_factor\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"hist_upper_outliers\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"histogram\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"simulation\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"pressure_pyy\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"energy_intravdw\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"dos_flatness\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"world_composition\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"particle_id\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"hist_bin_count\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"energy_intraelect\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"energy_intervdw\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"particle_director\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}, \"particle_parent_species\": {\"type\": \"integer\", \"maximum\": 1, \"minimum\": 0}}}, \"extension\": {\"type\": \"string\"}, \"type\": {\"type\": \"string\", \"enum\": [\"DLMFile\"]}, \"colwidth\": {\"type\": \"integer\", \"minimum\": 1}, \"delimiter\": {\"type\": \"string\"}}, \"additionalProperties\": false}";
	std::string SAPHRON::JsonSchema::DeleteParticleMove = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"DeleteParticle\"]}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"species\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"minimumItems\": 1}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"required\": [\"type\", \"species\"]}";
	std::string SAPHRON::JsonSchema::InsertParticleMove = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"InsertParticle\"]}, \"stash_count\": {\"type\": \"integer\", \"minimum\": 1}, \"species\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"minimumItems\": 1}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"required\": [\"type\", \"stash_count\", \"species\"]}";
	std::string SAPHRON::JsonSchema::VolumeSwapMove = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"VolumeSwap\"]}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"dv\": {\"type\": \"number\", \"minimum\": 0}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"required\": [\"type\", \"dv\"]}";
	std::string SAPHRON::JsonSchema::RotateMove = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"Rotate\"]}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}, \"maxangle\": {\"type\": \"number\", \"exclusiveMinimum\": true, \"maximum\": 6.283185307179586, \"minimum\": 0}}, \"required\": [\"type\", \"maxangle\"]}";
	std::string SAPHRON::JsonSchema::TranslateMove = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"Translate\"]}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"dx\": {\"type\": \"number\", \"minimum\": 0}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"required\": [\"type\", \"dx\"]}";
	std::string SAPHRON::JsonSchema::DirectorRotateMove = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"DirectorRotate\"]}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::SpeciesSwapMove = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"SpeciesSwap\"]}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::ParticleSwapMove = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"ParticleSwap\"]}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::Moves = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::RandomIdentityMove = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"RandomIdentity\"]}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"identities\": {\"minIems\": 1, \"type\": \"array\", \"items\": {\"type\": \"string\"}, \"uniqueItems\": true}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"required\": [\"type\", \"identities\"]}";
	std::string SAPHRON::JsonSchema::FlipSpinMove = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"FlipSpin\"]}, \"weight\": {\"type\": \"integer\", \"minimum\": 1}, \"seed\": {\"type\": \"integer\", \"minimum\": 0}}, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::P2SAConnectivity = "{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"coefficient\": {\"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"director\": {\"type\": \"array\", \"items\": {\"type\": \"number\"}, \"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false}, \"selector\": {}}, \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"]}";
	std::string SAPHRON::JsonSchema::Connectivities = "{\"type\": \"array\", \"items\": {\"oneOf\": [{\"type\": \"object\", \"additionalProperties\": false, \"properties\": {\"coefficient\": {\"type\": \"number\"}, \"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"director\": {\"type\": \"array\", \"items\": {\"type\": \"number\"}, \"minItems\": 3, \"maxItems\": 3, \"additionalItems\": false}, \"selector\": {}}, \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"]}]}}";
	
}
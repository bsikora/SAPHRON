#include "schema.h"

namespace SAPHRON
{
	//INSERT_DEF_HERE
	std::string SAPHRON::JsonSchema::ElasticCoeffOP = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"ElasticCoeff\"]}, \"xrange\": {\"maxItems\": 2, \"type\": \"array\", \"minItems\": 2, \"items\": {\"type\": \"number\"}}, \"mode\": {\"type\": \"string\", \"enum\": [\"twist\"]}, \"world\": {\"minimum\": 0, \"type\": \"integer\"}}, \"required\": [\"type\", \"mode\", \"xrange\", \"world\"]}";
	std::string SAPHRON::JsonSchema::WangLandauOP = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"WangLandau\"]}}, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::Histogram = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"bincount\": {\"minimum\": 1, \"type\": \"integer\"}, \"binwidth\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"min\": {\"type\": \"number\"}, \"values\": {\"type\": \"array\", \"items\": {\"type\": \"number\"}}, \"max\": {\"type\": \"number\"}, \"counts\": {\"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"integer\"}}}, \"required\": [\"min\", \"max\"]}";
	std::string SAPHRON::JsonSchema::DOSSimulation = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"convergence_factor\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"reset_freq\": {\"minimum\": 0, \"type\": \"integer\"}, \"target_flatness\": {\"minimum\": 0, \"type\": \"number\", \"maximum\": 1, \"exclusiveMinimum\": true, \"exclusiveMaximum\": true}}}";
	std::string SAPHRON::JsonSchema::Simulation = "{\"type\": \"object\", \"properties\": {\"mpi\": {\"minimum\": 1, \"type\": \"integer\"}, \"units\": {\"type\": \"string\", \"enum\": [\"real\", \"reduced\"]}, \"simtype\": {\"type\": \"string\", \"enum\": [\"standard\", \"DOS\"]}, \"iterations\": {\"minimum\": 1, \"type\": \"integer\"}}, \"required\": [\"simtype\", \"iterations\"]}";
	std::string SAPHRON::JsonSchema::ForceFields = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"electrostatic\": {\"type\": \"array\"}, \"nonbonded\": {\"type\": \"array\"}, \"bonded\": {\"type\": \"array\"}}}";
	std::string SAPHRON::JsonSchema::DebyeHuckelFF = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"species\": {\"maxItems\": 2, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"string\"}, \"minItems\": 2}, \"type\": {\"type\": \"string\", \"enum\": [\"DebyeHuckel\"]}, \"kappa\": {\"minimum\": 0, \"type\": \"number\"}, \"rcut\": {\"type\": \"array\", \"minItems\": 1, \"items\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}}}, \"required\": [\"type\", \"kappa\", \"species\", \"rcut\"]}";
	std::string SAPHRON::JsonSchema::DSFFF = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"species\": {\"maxItems\": 2, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"string\"}, \"minItems\": 2}, \"type\": {\"type\": \"string\", \"enum\": [\"DSF\"]}, \"rcut\": {\"type\": \"array\", \"minItems\": 1, \"items\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}}, \"alpha\": {\"minimum\": 0, \"type\": \"number\"}}, \"required\": [\"type\", \"alpha\", \"species\", \"rcut\"]}";
	std::string SAPHRON::JsonSchema::LebwholLasherFF = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"species\": {\"maxItems\": 2, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"string\"}, \"minItems\": 2}, \"type\": {\"type\": \"string\", \"enum\": [\"LebwohlLasher\"]}, \"epsilon\": {\"type\": \"number\"}, \"gamma\": {\"type\": \"number\"}}, \"required\": [\"type\", \"epsilon\", \"gamma\", \"species\"]}";
	std::string SAPHRON::JsonSchema::LennardJonesFF = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"species\": {\"maxItems\": 2, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"string\"}, \"minItems\": 2}, \"type\": {\"type\": \"string\", \"enum\": [\"LennardJones\"]}, \"epsilon\": {\"minimum\": 0, \"type\": \"number\"}, \"sigma\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"rcut\": {\"type\": \"array\", \"minItems\": 1, \"items\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}}}, \"required\": [\"type\", \"sigma\", \"epsilon\", \"species\", \"rcut\"]}";
	std::string SAPHRON::JsonSchema::Components = "{\"type\": \"array\", \"minItems\": 1, \"items\": {\"maxItems\": 2, \"type\": \"array\", \"minItems\": 2, \"items\": [{\"type\": \"string\"}, {\"minimum\": 1, \"type\": \"integer\"}]}}";
	std::string SAPHRON::JsonSchema::Worlds = "{\"type\": \"array\", \"minItems\": 1, \"items\": {\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"nlist_cutoff\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"temperature\": {\"minimum\": 0, \"type\": \"number\"}, \"skin_thickness\": {\"minimum\": 0, \"type\": \"number\"}, \"pack\": {\"type\": \"object\", \"properties\": {\"density\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"count\": {\"minimum\": 1, \"type\": \"integer\"}, \"composition\": {\"type\": \"object\", \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"minimum\": 0.0, \"type\": \"number\", \"maximum\": 1.0, \"exclusiveMinimum\": true}}}}}, \"dimensions\": {\"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\"}, \"minItems\": 3}, \"chemical_potential\": {\"type\": \"object\", \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"number\"}}}, \"particles\": {\"type\": \"array\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"components\": {\"type\": \"array\", \"minItems\": 1, \"items\": {\"maxItems\": 2, \"type\": \"array\", \"minItems\": 2, \"items\": [{\"type\": \"string\"}, {\"minimum\": 1, \"type\": \"integer\"}]}}}, \"required\": [\"type\", \"dimensions\", \"nlist_cutoff\", \"skin_thickness\", \"components\"]}}";
	std::string SAPHRON::JsonSchema::SimpleWorld = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"nlist_cutoff\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"type\": {\"type\": \"string\", \"enum\": [\"Simple\"]}, \"temperature\": {\"minimum\": 0, \"type\": \"number\"}, \"skin_thickness\": {\"minimum\": 0, \"type\": \"number\"}, \"pack\": {\"type\": \"object\", \"properties\": {\"density\": {\"minimum\": 0, \"type\": \"number\", \"exclusiveMinimum\": true}, \"count\": {\"minimum\": 1, \"type\": \"integer\"}, \"composition\": {\"type\": \"object\", \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"minimum\": 0.0, \"type\": \"number\", \"maximum\": 1.0, \"exclusiveMinimum\": true}}}}}, \"dimensions\": {\"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\"}, \"minItems\": 3}, \"chemical_potential\": {\"type\": \"object\", \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"type\": \"number\"}}}, \"particles\": {\"type\": \"array\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"components\": {\"type\": \"array\", \"minItems\": 1, \"items\": {\"maxItems\": 2, \"type\": \"array\", \"minItems\": 2, \"items\": [{\"type\": \"string\"}, {\"minimum\": 1, \"type\": \"integer\"}]}}}, \"required\": [\"type\", \"dimensions\", \"nlist_cutoff\", \"skin_thickness\", \"components\"]}";
	std::string SAPHRON::JsonSchema::Particles = "{\"additionalItems\": false, \"type\": \"array\", \"minItems\": 1, \"items\": {\"additionalItems\": false, \"maxItems\": 4, \"type\": \"array\", \"minItems\": 3, \"items\": [{\"minimum\": 1, \"type\": \"integer\"}, {\"type\": \"string\"}, {\"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\"}, \"minItems\": 3}, {\"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"number\"}, \"minItems\": 3}, {\"type\": \"string\"}]}}";
	std::string SAPHRON::JsonSchema::Site = "{\"additionalItems\": false, \"maxItems\": 4, \"type\": \"array\", \"minItems\": 3, \"items\": [{\"minimum\": 1, \"type\": \"integer\"}, {\"type\": \"string\"}, {\"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"minimum\": 0, \"type\": \"number\"}, \"minItems\": 3}, {\"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"number\"}, \"minItems\": 3}, {\"type\": \"string\"}]}";
	std::string SAPHRON::JsonSchema::Blueprints = "{\"additionalProperties\": false, \"type\": \"object\", \"minProperties\": 1, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"charge\": {\"type\": \"number\"}, \"children\": {\"type\": \"array\", \"minItems\": 1, \"items\": {\"type\": \"object\", \"properties\": {\"charge\": {\"type\": \"number\"}, \"species\": {\"type\": \"string\"}, \"mass\": {\"minimum\": 0, \"type\": \"number\"}}, \"required\": [\"species\"]}}, \"bonds\": {\"type\": \"array\", \"items\": {\"maxItems\": 2, \"type\": \"array\", \"minItems\": 2, \"items\": {\"minimum\": 0, \"type\": \"number\"}}}, \"mass\": {\"minimum\": 0, \"type\": \"number\"}}, \"minProperties\": 1}}}";
	std::string SAPHRON::JsonSchema::Selector = "{}";
	std::string SAPHRON::JsonSchema::Director = "{\"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"number\"}, \"minItems\": 3}";
	std::string SAPHRON::JsonSchema::Observers = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::XYZObserver = "{\"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"XYZ\"]}, \"prefix\": {\"type\": \"string\"}, \"frequency\": {\"minimum\": 1, \"type\": \"integer\"}}, \"required\": [\"type\", \"prefix\", \"frequency\"]}";
	std::string SAPHRON::JsonSchema::JSONObserver = "{\"additionalProperties\": false, \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"JSON\"]}, \"prefix\": {\"type\": \"string\"}, \"frequency\": {\"minimum\": 1, \"type\": \"integer\"}}, \"required\": [\"type\", \"prefix\", \"frequency\"]}";
	std::string SAPHRON::JsonSchema::DLMFileObserver = "{\"additionalProperties\": false, \"properties\": {\"colwidth\": {\"minimum\": 1, \"type\": \"integer\"}, \"type\": {\"type\": \"string\", \"enum\": [\"DLMFile\"]}, \"frequency\": {\"minimum\": 1, \"type\": \"integer\"}, \"extension\": {\"type\": \"string\"}, \"flags\": {\"type\": \"object\", \"properties\": {\"pressure_pxz\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_pxx\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_ideal\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"dos_factor\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_species_id\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_director\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_tensor\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"energy_interelect\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_temperature\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_tail\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"energy_intravdw\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_energy\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_parent_id\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_species\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_position\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_density\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_pxy\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_pyz\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_chem_pot\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"histogram\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_pzz\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"energy_intraelect\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"move_acceptances\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"energy_intervdw\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"simulation\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"dos_flatness\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"iteration\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"energy_components\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_neighbors\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_id\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"energy_bonded\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_volume\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"hist_upper_outliers\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"hist_bin_count\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"hist_values\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"hist_interval\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"particle_parent_species\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"hist_counts\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_composition\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"world_pressure\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"energy_connectivity\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"hist_lower_outliers\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}, \"pressure_pyy\": {\"minimum\": 0, \"type\": \"integer\", \"maximum\": 1}}}, \"fixedwmode\": {\"type\": \"boolean\"}, \"prefix\": {\"type\": \"string\"}, \"delimiter\": {\"type\": \"string\"}}, \"required\": [\"type\", \"prefix\", \"frequency\", \"flags\"]}";
	std::string SAPHRON::JsonSchema::DeleteParticleMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"species\": {\"type\": \"array\", \"minimumItems\": 1, \"items\": {\"type\": \"string\"}}, \"type\": {\"type\": \"string\", \"enum\": [\"DeleteParticle\"]}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"op_prefactor\": {\"tyoe\": \"boolean\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"required\": [\"type\", \"species\"]}";
	std::string SAPHRON::JsonSchema::InsertParticleMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"InsertParticle\"]}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"species\": {\"type\": \"array\", \"minimumItems\": 1, \"items\": {\"type\": \"string\"}}, \"stash_count\": {\"minimum\": 1, \"type\": \"integer\"}, \"op_prefactor\": {\"tyoe\": \"boolean\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"required\": [\"type\", \"stash_count\", \"species\"]}";
	std::string SAPHRON::JsonSchema::VolumeSwapMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"VolumeSwap\"]}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"dv\": {\"minimum\": 0, \"type\": \"number\"}}, \"required\": [\"type\", \"dv\"]}";
	std::string SAPHRON::JsonSchema::RotateMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"Rotate\"]}, \"maxangle\": {\"minimum\": 0, \"type\": \"number\", \"maximum\": 6.283185307179586, \"exclusiveMinimum\": true}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"required\": [\"type\", \"maxangle\"]}";
	std::string SAPHRON::JsonSchema::TranslateMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"explicit_draw\": {\"type\": \"boolean\"}, \"type\": {\"type\": \"string\", \"enum\": [\"Translate\"]}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"dx\": {\"oneOf\": [{\"minimum\": 0, \"type\": \"number\"}, {\"type\": \"object\", \"minProperties\": 1, \"patternProperties\": {\"^[A-z][A-z0-9]+$\": {\"minimum\": 0.0, \"type\": \"number\", \"exclusiveMinimum\": true}}}]}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"required\": [\"type\", \"dx\"]}";
	std::string SAPHRON::JsonSchema::DirectorRotateMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"DirectorRotate\"]}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::SpeciesSwapMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"SpeciesSwap\"]}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::ParticleSwapMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"ParticleSwap\"]}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::Moves = "{\"type\": \"array\"}";
	std::string SAPHRON::JsonSchema::RandomIdentityMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"RandomIdentity\"]}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}, \"identities\": {\"type\": \"array\", \"uniqueItems\": true, \"minIems\": 1, \"items\": {\"type\": \"string\"}}}, \"required\": [\"type\", \"identities\"]}";
	std::string SAPHRON::JsonSchema::FlipSpinMove = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"FlipSpin\"]}, \"weight\": {\"minimum\": 1, \"type\": \"integer\"}, \"seed\": {\"minimum\": 0, \"type\": \"integer\"}}, \"required\": [\"type\"]}";
	std::string SAPHRON::JsonSchema::P2SAConnectivity = "{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"director\": {\"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"number\"}, \"minItems\": 3}, \"coefficient\": {\"type\": \"number\"}, \"selector\": {}}, \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"]}";
	std::string SAPHRON::JsonSchema::Connectivities = "{\"type\": \"array\", \"items\": {\"oneOf\": [{\"additionalProperties\": false, \"type\": \"object\", \"properties\": {\"type\": {\"type\": \"string\", \"enum\": [\"P2SA\"]}, \"director\": {\"maxItems\": 3, \"additionalItems\": false, \"type\": \"array\", \"items\": {\"type\": \"number\"}, \"minItems\": 3}, \"coefficient\": {\"type\": \"number\"}, \"selector\": {}}, \"required\": [\"type\", \"coefficient\", \"director\", \"selector\"]}]}}";
	
}